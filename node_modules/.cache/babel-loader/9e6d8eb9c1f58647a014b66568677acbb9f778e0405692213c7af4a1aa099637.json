{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n/*!\r\n  * core-base v11.1.2\r\n  * (c) 2025 kazuya kawaguchi\r\n  * Released under the MIT License.\r\n  */\nimport { getGlobalThis, hasOwn, isNumber, create, isObject, isString, isBoolean, warn, format as format$1, isFunction, isPromise, isArray, isPlainObject, assign, isRegExp, warnOnce, isEmptyObject, isDate, join, toDisplayString, escapeHtml, inBrowser, mark, measure, generateCodeFrame, generateFormatCacheKey } from '@intlify/shared';\nimport { detectHtmlTag, defaultOnError, baseCompile as baseCompile$1, COMPILE_ERROR_CODES_EXTEND_POINT, createCompileError } from '@intlify/message-compiler';\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * istanbul-ignore-next\r\n */\nfunction initFeatureFlags() {\n  if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n    getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n  }\n  if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ !== 'boolean') {\n    getGlobalThis().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;\n  }\n}\nfunction format(ast) {\n  const msg = ctx => formatParts(ctx, ast);\n  return msg;\n}\nfunction formatParts(ctx, ast) {\n  const body = resolveBody(ast);\n  if (body == null) {\n    throw createUnhandleNodeError(0 /* NodeTypes.Resource */);\n  }\n  const type = resolveType(body);\n  if (type === 1 /* NodeTypes.Plural */) {\n    const plural = body;\n    const cases = resolveCases(plural);\n    return ctx.plural(cases.reduce((messages, c) => [...messages, formatMessageParts(ctx, c)], []));\n  } else {\n    return formatMessageParts(ctx, body);\n  }\n}\nconst PROPS_BODY = ['b', 'body'];\nfunction resolveBody(node) {\n  return resolveProps(node, PROPS_BODY);\n}\nconst PROPS_CASES = ['c', 'cases'];\nfunction resolveCases(node) {\n  return resolveProps(node, PROPS_CASES, []);\n}\nfunction formatMessageParts(ctx, node) {\n  const static_ = resolveStatic(node);\n  if (static_ != null) {\n    return ctx.type === 'text' ? static_ : ctx.normalize([static_]);\n  } else {\n    const messages = resolveItems(node).reduce((acm, c) => [...acm, formatMessagePart(ctx, c)], []);\n    return ctx.normalize(messages);\n  }\n}\nconst PROPS_STATIC = ['s', 'static'];\nfunction resolveStatic(node) {\n  return resolveProps(node, PROPS_STATIC);\n}\nconst PROPS_ITEMS = ['i', 'items'];\nfunction resolveItems(node) {\n  return resolveProps(node, PROPS_ITEMS, []);\n}\nfunction formatMessagePart(ctx, node) {\n  const type = resolveType(node);\n  switch (type) {\n    case 3 /* NodeTypes.Text */:\n      {\n        return resolveValue$1(node, type);\n      }\n    case 9 /* NodeTypes.Literal */:\n      {\n        return resolveValue$1(node, type);\n      }\n    case 4 /* NodeTypes.Named */:\n      {\n        const named = node;\n        if (hasOwn(named, 'k') && named.k) {\n          return ctx.interpolate(ctx.named(named.k));\n        }\n        if (hasOwn(named, 'key') && named.key) {\n          return ctx.interpolate(ctx.named(named.key));\n        }\n        throw createUnhandleNodeError(type);\n      }\n    case 5 /* NodeTypes.List */:\n      {\n        const list = node;\n        if (hasOwn(list, 'i') && isNumber(list.i)) {\n          return ctx.interpolate(ctx.list(list.i));\n        }\n        if (hasOwn(list, 'index') && isNumber(list.index)) {\n          return ctx.interpolate(ctx.list(list.index));\n        }\n        throw createUnhandleNodeError(type);\n      }\n    case 6 /* NodeTypes.Linked */:\n      {\n        const linked = node;\n        const modifier = resolveLinkedModifier(linked);\n        const key = resolveLinkedKey(linked);\n        return ctx.linked(formatMessagePart(ctx, key), modifier ? formatMessagePart(ctx, modifier) : undefined, ctx.type);\n      }\n    case 7 /* NodeTypes.LinkedKey */:\n      {\n        return resolveValue$1(node, type);\n      }\n    case 8 /* NodeTypes.LinkedModifier */:\n      {\n        return resolveValue$1(node, type);\n      }\n    default:\n      throw new Error(`unhandled node on format message part: ${type}`);\n  }\n}\nconst PROPS_TYPE = ['t', 'type'];\nfunction resolveType(node) {\n  return resolveProps(node, PROPS_TYPE);\n}\nconst PROPS_VALUE = ['v', 'value'];\nfunction resolveValue$1(node, type) {\n  const resolved = resolveProps(node, PROPS_VALUE);\n  if (resolved) {\n    return resolved;\n  } else {\n    throw createUnhandleNodeError(type);\n  }\n}\nconst PROPS_MODIFIER = ['m', 'modifier'];\nfunction resolveLinkedModifier(node) {\n  return resolveProps(node, PROPS_MODIFIER);\n}\nconst PROPS_KEY = ['k', 'key'];\nfunction resolveLinkedKey(node) {\n  const resolved = resolveProps(node, PROPS_KEY);\n  if (resolved) {\n    return resolved;\n  } else {\n    throw createUnhandleNodeError(6 /* NodeTypes.Linked */);\n  }\n}\nfunction resolveProps(node, props, defaultValue) {\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (hasOwn(node, prop) && node[prop] != null) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return node[prop];\n    }\n  }\n  return defaultValue;\n}\nfunction createUnhandleNodeError(type) {\n  return new Error(`unhandled node type: ${type}`);\n}\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\nfunction checkHtmlMessage(source, warnHtmlMessage) {\n  if (warnHtmlMessage && detectHtmlTag(source)) {\n    warn(format$1(WARN_MESSAGE, {\n      source\n    }));\n  }\n}\nconst defaultOnCacheKey = message => message;\nlet compileCache = create();\nfunction clearCompileCache() {\n  compileCache = create();\n}\nfunction isMessageAST(val) {\n  return isObject(val) && resolveType(val) === 0 && (hasOwn(val, 'b') || hasOwn(val, 'body'));\n}\nfunction baseCompile(message, options = {}) {\n  // error detecting on compile\n  let detectError = false;\n  const onError = options.onError || defaultOnError;\n  options.onError = err => {\n    detectError = true;\n    onError(err);\n  };\n  // compile with mesasge-compiler\n  return {\n    ...baseCompile$1(message, options),\n    detectError\n  };\n}\n/* #__NO_SIDE_EFFECTS__ */\nfunction compile(message, context) {\n  if (!__INTLIFY_DROP_MESSAGE_COMPILER__ && isString(message)) {\n    // check HTML message\n    const warnHtmlMessage = isBoolean(context.warnHtmlMessage) ? context.warnHtmlMessage : true;\n    process.env.NODE_ENV !== 'production' && checkHtmlMessage(message, warnHtmlMessage);\n    // check caches\n    const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n    const cacheKey = onCacheKey(message);\n    const cached = compileCache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    // compile with JIT mode\n    const {\n      ast,\n      detectError\n    } = baseCompile(message, {\n      ...context,\n      location: process.env.NODE_ENV !== 'production',\n      jit: true\n    });\n    // compose message function from AST\n    const msg = format(ast);\n    // if occurred compile error, don't cache\n    return !detectError ? compileCache[cacheKey] = msg : msg;\n  } else {\n    if (process.env.NODE_ENV !== 'production' && !isMessageAST(message)) {\n      warn(`the message that is resolve with key '${context.key}' is not supported for jit compilation`);\n      return () => message;\n    }\n    // AST case (passed from bundler)\n    const cacheKey = message.cacheKey;\n    if (cacheKey) {\n      const cached = compileCache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      // compose message function from message (AST)\n      return compileCache[cacheKey] = format(message);\n    } else {\n      return format(message);\n    }\n  }\n}\nlet devtools = null;\nfunction setDevToolsHook(hook) {\n  devtools = hook;\n}\nfunction getDevToolsHook() {\n  return devtools;\n}\nfunction initI18nDevTools(i18n, version, meta) {\n  // TODO: queue if devtools is undefined\n  devtools && devtools.emit('i18n:init', {\n    timestamp: Date.now(),\n    i18n,\n    version,\n    meta\n  });\n}\nconst translateDevTools = /* #__PURE__*/createDevToolsHook('function:translate');\nfunction createDevToolsHook(hook) {\n  return payloads => devtools && devtools.emit(hook, payloads);\n}\nconst CoreErrorCodes = {\n  INVALID_ARGUMENT: COMPILE_ERROR_CODES_EXTEND_POINT,\n  // 17\n  INVALID_DATE_ARGUMENT: 18,\n  INVALID_ISO_DATE_ARGUMENT: 19,\n  NOT_SUPPORT_NON_STRING_MESSAGE: 20,\n  NOT_SUPPORT_LOCALE_PROMISE_VALUE: 21,\n  NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: 22,\n  NOT_SUPPORT_LOCALE_TYPE: 23\n};\nconst CORE_ERROR_CODES_EXTEND_POINT = 24;\nfunction createCoreError(code) {\n  return createCompileError(code, null, process.env.NODE_ENV !== 'production' ? {\n    messages: errorMessages\n  } : undefined);\n}\n/** @internal */\nconst errorMessages = {\n  [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n  [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' + 'Make sure your Date represents a valid date.',\n  [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string',\n  [CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE]: 'Not support non-string message',\n  [CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE]: 'cannot support promise value',\n  [CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION]: 'cannot support async function',\n  [CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE]: 'cannot support locale type'\n};\n\n/** @internal */\nfunction getLocale(context, options) {\n  return options.locale != null ? resolveLocale(options.locale) : resolveLocale(context.locale);\n}\nlet _resolveLocale;\n/** @internal */\nfunction resolveLocale(locale) {\n  if (isString(locale)) {\n    return locale;\n  } else {\n    if (isFunction(locale)) {\n      if (locale.resolvedOnce && _resolveLocale != null) {\n        return _resolveLocale;\n      } else if (locale.constructor.name === 'Function') {\n        const resolve = locale();\n        if (isPromise(resolve)) {\n          throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);\n        }\n        return _resolveLocale = resolve;\n      } else {\n        throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);\n      }\n    } else {\n      throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);\n    }\n  }\n}\n/**\r\n * Fallback with simple implemenation\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a simple fallback algorithm.\r\n *\r\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction fallbackWithSimple(ctx, fallback, start) {\n  // prettier-ignore\n  return [...new Set([start, ...(isArray(fallback) ? fallback : isObject(fallback) ? Object.keys(fallback) : isString(fallback) ? [fallback] : [start])])];\n}\n/**\r\n * Fallback with locale chain\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n  const startLocale = isString(start) ? start : DEFAULT_LOCALE;\n  const context = ctx;\n  if (!context.__localeChainCache) {\n    context.__localeChainCache = new Map();\n  }\n  let chain = context.__localeChainCache.get(startLocale);\n  if (!chain) {\n    chain = [];\n    // first block defined by start\n    let block = [start];\n    // while any intervening block found\n    while (isArray(block)) {\n      block = appendBlockToChain(chain, block, fallback);\n    }\n    // prettier-ignore\n    // last block defined by default\n    const defaults = isArray(fallback) || !isPlainObject(fallback) ? fallback : fallback['default'] ? fallback['default'] : null;\n    // convert defaults to array\n    block = isString(defaults) ? [defaults] : defaults;\n    if (isArray(block)) {\n      appendBlockToChain(chain, block, false);\n    }\n    context.__localeChainCache.set(startLocale, chain);\n  }\n  return chain;\n}\nfunction appendBlockToChain(chain, block, blocks) {\n  let follow = true;\n  for (let i = 0; i < block.length && isBoolean(follow); i++) {\n    const locale = block[i];\n    if (isString(locale)) {\n      follow = appendLocaleToChain(chain, block[i], blocks);\n    }\n  }\n  return follow;\n}\nfunction appendLocaleToChain(chain, locale, blocks) {\n  let follow;\n  const tokens = locale.split('-');\n  do {\n    const target = tokens.join('-');\n    follow = appendItemToChain(chain, target, blocks);\n    tokens.splice(-1, 1);\n  } while (tokens.length && follow === true);\n  return follow;\n}\nfunction appendItemToChain(chain, target, blocks) {\n  let follow = false;\n  if (!chain.includes(target)) {\n    follow = true;\n    if (target) {\n      follow = target[target.length - 1] !== '!';\n      const locale = target.replace(/!/g, '');\n      chain.push(locale);\n      if ((isArray(blocks) || isPlainObject(blocks)) && blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        follow = blocks[locale];\n      }\n    }\n  }\n  return follow;\n}\nconst pathStateMachine = [];\npathStateMachine[0 /* States.BEFORE_PATH */] = {\n  [\"w\" /* PathCharTypes.WORKSPACE */]: [0 /* States.BEFORE_PATH */],\n  [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n  [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[1 /* States.IN_PATH */] = {\n  [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */],\n  [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */],\n  [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[2 /* States.BEFORE_IDENT */] = {\n  [\"w\" /* PathCharTypes.WORKSPACE */]: [2 /* States.BEFORE_IDENT */],\n  [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n  [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */]\n};\npathStateMachine[3 /* States.IN_IDENT */] = {\n  [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n  [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n  [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */, 1 /* Actions.PUSH */],\n  [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */, 1 /* Actions.PUSH */],\n  [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 1 /* Actions.PUSH */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */, 1 /* Actions.PUSH */]\n};\npathStateMachine[4 /* States.IN_SUB_PATH */] = {\n  [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */],\n  [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */],\n  [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 2 /* Actions.INC_SUB_PATH_DEPTH */],\n  [\"]\" /* PathCharTypes.RIGHT_BRACKET */]: [1 /* States.IN_PATH */, 3 /* Actions.PUSH_SUB_PATH */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n  [\"l\" /* PathCharTypes.ELSE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */]\n};\npathStateMachine[5 /* States.IN_SINGLE_QUOTE */] = {\n  [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n  [\"l\" /* PathCharTypes.ELSE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */]\n};\npathStateMachine[6 /* States.IN_DOUBLE_QUOTE */] = {\n  [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n  [\"l\" /* PathCharTypes.ELSE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */]\n};\n/**\r\n * Check if an expression is a literal value.\r\n */\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n/**\r\n * Strip quotes from a string\r\n */\nfunction stripQuotes(str) {\n  const a = str.charCodeAt(0);\n  const b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\r\n * Determine the type of a character in a keypath.\r\n */\nfunction getPathCharType(ch) {\n  if (ch === undefined || ch === null) {\n    return \"o\" /* PathCharTypes.END_OF_FAIL */;\n  }\n  const code = ch.charCodeAt(0);\n  switch (code) {\n    case 0x5b: // [\n    case 0x5d: // ]\n    case 0x2e: // .\n    case 0x22: // \"\n    case 0x27:\n      // '\n      return ch;\n    case 0x5f: // _\n    case 0x24: // $\n    case 0x2d:\n      // -\n      return \"i\" /* PathCharTypes.IDENT */;\n    case 0x09: // Tab (HT)\n    case 0x0a: // Newline (LF)\n    case 0x0d: // Return (CR)\n    case 0xa0: // No-break space (NBSP)\n    case 0xfeff: // Byte Order Mark (BOM)\n    case 0x2028: // Line Separator (LS)\n    case 0x2029:\n      // Paragraph Separator (PS)\n      return \"w\" /* PathCharTypes.WORKSPACE */;\n  }\n  return \"i\" /* PathCharTypes.IDENT */;\n}\n/**\r\n * Format a subPath, return its plain form if it is\r\n * a literal string or number. Otherwise prepend the\r\n * dynamic indicator (*).\r\n */\nfunction formatSubPath(path) {\n  const trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : \"*\" /* PathCharTypes.ASTARISK */ + trimmed;\n}\n/**\r\n * Parse a string path into an array of segments\r\n */\nfunction parse(path) {\n  const keys = [];\n  let index = -1;\n  let mode = 0 /* States.BEFORE_PATH */;\n  let subPathDepth = 0;\n  let c;\n  let key; // eslint-disable-line\n  let newChar;\n  let type;\n  let transition;\n  let action;\n  let typeMap;\n  const actions = [];\n  actions[0 /* Actions.APPEND */] = () => {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n  actions[1 /* Actions.PUSH */] = () => {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n  actions[2 /* Actions.INC_SUB_PATH_DEPTH */] = () => {\n    actions[0 /* Actions.APPEND */]();\n    subPathDepth++;\n  };\n  actions[3 /* Actions.PUSH_SUB_PATH */] = () => {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = 4 /* States.IN_SUB_PATH */;\n      actions[0 /* Actions.APPEND */]();\n    } else {\n      subPathDepth = 0;\n      if (key === undefined) {\n        return false;\n      }\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[1 /* Actions.PUSH */]();\n      }\n    }\n  };\n  function maybeUnescapeQuote() {\n    const nextChar = path[index + 1];\n    if (mode === 5 /* States.IN_SINGLE_QUOTE */ && nextChar === \"'\" /* PathCharTypes.SINGLE_QUOTE */ || mode === 6 /* States.IN_DOUBLE_QUOTE */ && nextChar === \"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */) {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[0 /* Actions.APPEND */]();\n      return true;\n    }\n  }\n  while (mode !== null) {\n    index++;\n    c = path[index];\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap[\"l\" /* PathCharTypes.ELSE */] || 8 /* States.ERROR */;\n    // check parse error\n    if (transition === 8 /* States.ERROR */) {\n      return;\n    }\n    mode = transition[0];\n    if (transition[1] !== undefined) {\n      action = actions[transition[1]];\n      if (action) {\n        newChar = c;\n        if (action() === false) {\n          return;\n        }\n      }\n    }\n    // check parse finish\n    if (mode === 7 /* States.AFTER_PATH */) {\n      return keys;\n    }\n  }\n}\n// path token cache\nconst cache = new Map();\n/**\r\n * key-value message resolver\r\n *\r\n * @remarks\r\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction resolveWithKeyValue(obj, path) {\n  return isObject(obj) ? obj[path] : null;\n}\n/**\r\n * message resolver\r\n *\r\n * @remarks\r\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction resolveValue(obj, path) {\n  // check object\n  if (!isObject(obj)) {\n    return null;\n  }\n  // parse path\n  let hit = cache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      cache.set(path, hit);\n    }\n  }\n  // check hit\n  if (!hit) {\n    return null;\n  }\n  // resolve path value\n  const len = hit.length;\n  let last = obj;\n  let i = 0;\n  while (i < len) {\n    const val = last[hit[i]];\n    if (val === undefined) {\n      return null;\n    }\n    if (isFunction(last)) {\n      return null;\n    }\n    last = val;\n    i++;\n  }\n  return last;\n}\nconst CoreWarnCodes = {\n  NOT_FOUND_KEY: 1,\n  FALLBACK_TO_TRANSLATE: 2,\n  CANNOT_FORMAT_NUMBER: 3,\n  FALLBACK_TO_NUMBER_FORMAT: 4,\n  CANNOT_FORMAT_DATE: 5,\n  FALLBACK_TO_DATE_FORMAT: 6,\n  EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: 7\n};\nconst CORE_WARN_CODES_EXTEND_POINT = 8;\n/** @internal */\nconst warnMessages = {\n  [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n  [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n  [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n  [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER]: `This project is using Custom Message Compiler, which is an experimental feature. It may receive breaking changes or be removed in the future.`\n};\nfunction getWarnMessage(code, ...args) {\n  return format$1(warnMessages[code], ...args);\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\r\n * Intlify core-base version\r\n * @internal\r\n */\nconst VERSION = '11.1.2';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\nconst capitalize = str => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\nfunction getDefaultLinkedModifiers() {\n  return {\n    upper: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && isString(val) ? val.toUpperCase() : type === 'vnode' && isObject(val) && '__v_isVNode' in val ? val.children.toUpperCase() : val;\n    },\n    lower: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && isString(val) ? val.toLowerCase() : type === 'vnode' && isObject(val) && '__v_isVNode' in val ? val.children.toLowerCase() : val;\n    },\n    capitalize: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && isString(val) ? capitalize(val) : type === 'vnode' && isObject(val) && '__v_isVNode' in val ? capitalize(val.children) : val;\n    }\n  };\n}\nlet _compiler;\nfunction registerMessageCompiler(compiler) {\n  _compiler = compiler;\n}\nlet _resolver;\n/**\r\n * Register the message resolver\r\n *\r\n * @param resolver - A {@link MessageResolver} function\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction registerMessageResolver(resolver) {\n  _resolver = resolver;\n}\nlet _fallbacker;\n/**\r\n * Register the locale fallbacker\r\n *\r\n * @param fallbacker - A {@link LocaleFallbacker} function\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction registerLocaleFallbacker(fallbacker) {\n  _fallbacker = fallbacker;\n}\n// Additional Meta for Intlify DevTools\nlet _additionalMeta = null;\n/* #__NO_SIDE_EFFECTS__ */\nconst setAdditionalMeta = meta => {\n  _additionalMeta = meta;\n};\n/* #__NO_SIDE_EFFECTS__ */\nconst getAdditionalMeta = () => _additionalMeta;\nlet _fallbackContext = null;\nconst setFallbackContext = context => {\n  _fallbackContext = context;\n};\nconst getFallbackContext = () => _fallbackContext;\n// ID for CoreContext\nlet _cid = 0;\nfunction createCoreContext(options = {}) {\n  // setup options\n  const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\n  const version = isString(options.version) ? options.version : VERSION;\n  const locale = isString(options.locale) || isFunction(options.locale) ? options.locale : DEFAULT_LOCALE;\n  const _locale = isFunction(locale) ? DEFAULT_LOCALE : locale;\n  const fallbackLocale = isArray(options.fallbackLocale) || isPlainObject(options.fallbackLocale) || isString(options.fallbackLocale) || options.fallbackLocale === false ? options.fallbackLocale : _locale;\n  const messages = isPlainObject(options.messages) ? options.messages : createResources(_locale);\n  const datetimeFormats = isPlainObject(options.datetimeFormats) ? options.datetimeFormats : createResources(_locale);\n  const numberFormats = isPlainObject(options.numberFormats) ? options.numberFormats : createResources(_locale);\n  const modifiers = assign(create(), options.modifiers, getDefaultLinkedModifiers());\n  const pluralRules = options.pluralRules || create();\n  const missing = isFunction(options.missing) ? options.missing : null;\n  const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn) ? options.missingWarn : true;\n  const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn) ? options.fallbackWarn : true;\n  const fallbackFormat = !!options.fallbackFormat;\n  const unresolving = !!options.unresolving;\n  const postTranslation = isFunction(options.postTranslation) ? options.postTranslation : null;\n  const processor = isPlainObject(options.processor) ? options.processor : null;\n  const warnHtmlMessage = isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;\n  const escapeParameter = !!options.escapeParameter;\n  const messageCompiler = isFunction(options.messageCompiler) ? options.messageCompiler : _compiler;\n  if (process.env.NODE_ENV !== 'production' && !false && !false && isFunction(options.messageCompiler)) {\n    warnOnce(getWarnMessage(CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER));\n  }\n  const messageResolver = isFunction(options.messageResolver) ? options.messageResolver : _resolver || resolveWithKeyValue;\n  const localeFallbacker = isFunction(options.localeFallbacker) ? options.localeFallbacker : _fallbacker || fallbackWithSimple;\n  const fallbackContext = isObject(options.fallbackContext) ? options.fallbackContext : undefined;\n  // setup internal options\n  const internalOptions = options;\n  const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters) ? internalOptions.__datetimeFormatters : new Map();\n  const __numberFormatters = isObject(internalOptions.__numberFormatters) ? internalOptions.__numberFormatters : new Map();\n  const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n  _cid++;\n  const context = {\n    version,\n    cid: _cid,\n    locale,\n    fallbackLocale,\n    messages,\n    modifiers,\n    pluralRules,\n    missing,\n    missingWarn,\n    fallbackWarn,\n    fallbackFormat,\n    unresolving,\n    postTranslation,\n    processor,\n    warnHtmlMessage,\n    escapeParameter,\n    messageCompiler,\n    messageResolver,\n    localeFallbacker,\n    fallbackContext,\n    onWarn,\n    __meta\n  };\n  {\n    context.datetimeFormats = datetimeFormats;\n    context.numberFormats = numberFormats;\n    context.__datetimeFormatters = __datetimeFormatters;\n    context.__numberFormatters = __numberFormatters;\n  }\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production') {\n    context.__v_emitter = internalOptions.__v_emitter != null ? internalOptions.__v_emitter : undefined;\n  }\n  // NOTE: experimental !!\n  if (process.env.NODE_ENV !== 'production' || __INTLIFY_PROD_DEVTOOLS__) {\n    initI18nDevTools(context, version, __meta);\n  }\n  return context;\n}\nconst createResources = locale => ({\n  [locale]: create()\n});\n/** @internal */\nfunction isTranslateFallbackWarn(fallback, key) {\n  return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\nfunction isTranslateMissingWarn(missing, key) {\n  return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\nfunction handleMissing(context, key, locale, missingWarn, type) {\n  const {\n    missing,\n    onWarn\n  } = context;\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production') {\n    const emitter = context.__v_emitter;\n    if (emitter) {\n      emitter.emit('missing', {\n        locale,\n        key,\n        type,\n        groupId: `${type}:${key}`\n      });\n    }\n  }\n  if (missing !== null) {\n    const ret = missing(context, locale, key, type);\n    return isString(ret) ? ret : key;\n  } else {\n    if (process.env.NODE_ENV !== 'production' && isTranslateMissingWarn(missingWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, {\n        key,\n        locale\n      }));\n    }\n    return key;\n  }\n}\n/** @internal */\nfunction updateFallbackLocale(ctx, locale, fallback) {\n  const context = ctx;\n  context.__localeChainCache = new Map();\n  ctx.localeFallbacker(ctx, fallback, locale);\n}\n/** @internal */\nfunction isAlmostSameLocale(locale, compareLocale) {\n  if (locale === compareLocale) return false;\n  return locale.split('-')[0] === compareLocale.split('-')[0];\n}\n/** @internal */\nfunction isImplicitFallback(targetLocale, locales) {\n  const index = locales.indexOf(targetLocale);\n  if (index === -1) {\n    return false;\n  }\n  for (let i = index + 1; i < locales.length; i++) {\n    if (isAlmostSameLocale(targetLocale, locales[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n  dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n  numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n};\n\n// implementation of `datetime` function\nfunction datetime(context, ...args) {\n  const {\n    datetimeFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn,\n    localeFallbacker\n  } = context;\n  const {\n    __datetimeFormatters\n  } = context;\n  if (process.env.NODE_ENV !== 'production' && !Availabilities.dateTimeFormat) {\n    onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\n    return MISSING_RESOLVE_VALUE;\n  }\n  const [key, value, options, overrides] = parseDateTimeArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = getLocale(context, options);\n  const locales = localeFallbacker(context,\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  fallbackLocale, locale);\n  if (!isString(key) || key === '') {\n    return new Intl.DateTimeFormat(locale, overrides).format(value);\n  }\n  // resolve format\n  let datetimeFormat = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'datetime format';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\n        key,\n        target: targetLocale\n      }));\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n      if (emitter) {\n        emitter.emit('fallback', {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n    datetimeFormat = datetimeFormats[targetLocale] || {};\n    format = datetimeFormat[key];\n    if (isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n    from = to;\n  }\n  // checking format and target locale\n  if (!isPlainObject(format) || !isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  let id = `${targetLocale}__${key}`;\n  if (!isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n  let formatter = __datetimeFormatters.get(id);\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n    __datetimeFormatters.set(id, formatter);\n  }\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst DATETIME_FORMAT_OPTIONS_KEYS = ['localeMatcher', 'weekday', 'era', 'year', 'month', 'day', 'hour', 'minute', 'second', 'timeZoneName', 'formatMatcher', 'hour12', 'timeZone', 'dateStyle', 'timeStyle', 'calendar', 'dayPeriod', 'numberingSystem', 'hourCycle', 'fractionalSecondDigits'];\n/** @internal */\nfunction parseDateTimeArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  const options = create();\n  let overrides = create();\n  let value;\n  if (isString(arg1)) {\n    // Only allow ISO strings - other date formats are often supported,\n    // but may cause different results in different browsers.\n    const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n    if (!matches) {\n      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n    }\n    // Some browsers can not parse the iso datetime separated by space,\n    // this is a compromise solution by replace the 'T'/' ' with 'T'\n    const dateTime = matches[3] ? matches[3].trim().startsWith('T') ? `${matches[1].trim()}${matches[3].trim()}` : `${matches[1].trim()}T${matches[3].trim()}` : matches[1].trim();\n    value = new Date(dateTime);\n    try {\n      // This will fail if the date is not valid\n      value.toISOString();\n    } catch {\n      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n    }\n  } else if (isDate(arg1)) {\n    if (isNaN(arg1.getTime())) {\n      throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n    }\n    value = arg1;\n  } else if (isNumber(arg1)) {\n    value = arg1;\n  } else {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  if (isString(arg2)) {\n    options.key = arg2;\n  } else if (isPlainObject(arg2)) {\n    Object.keys(arg2).forEach(key => {\n      if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\n        overrides[key] = arg2[key];\n      } else {\n        options[key] = arg2[key];\n      }\n    });\n  }\n  if (isString(arg3)) {\n    options.locale = arg3;\n  } else if (isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n  if (isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearDateTimeFormat(ctx, locale, format) {\n  const context = ctx;\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n    if (!context.__datetimeFormatters.has(id)) {\n      continue;\n    }\n    context.__datetimeFormatters.delete(id);\n  }\n}\n\n// implementation of `number` function\nfunction number(context, ...args) {\n  const {\n    numberFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn,\n    localeFallbacker\n  } = context;\n  const {\n    __numberFormatters\n  } = context;\n  if (process.env.NODE_ENV !== 'production' && !Availabilities.numberFormat) {\n    onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\n    return MISSING_RESOLVE_VALUE;\n  }\n  const [key, value, options, overrides] = parseNumberArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = getLocale(context, options);\n  const locales = localeFallbacker(context,\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  fallbackLocale, locale);\n  if (!isString(key) || key === '') {\n    return new Intl.NumberFormat(locale, overrides).format(value);\n  }\n  // resolve format\n  let numberFormat = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'number format';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\n        key,\n        target: targetLocale\n      }));\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n      if (emitter) {\n        emitter.emit('fallback', {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n    numberFormat = numberFormats[targetLocale] || {};\n    format = numberFormat[key];\n    if (isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n    from = to;\n  }\n  // checking format and target locale\n  if (!isPlainObject(format) || !isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  let id = `${targetLocale}__${key}`;\n  if (!isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n  let formatter = __numberFormatters.get(id);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n    __numberFormatters.set(id, formatter);\n  }\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst NUMBER_FORMAT_OPTIONS_KEYS = ['localeMatcher', 'style', 'currency', 'currencyDisplay', 'currencySign', 'useGrouping', 'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits', 'minimumSignificantDigits', 'maximumSignificantDigits', 'compactDisplay', 'notation', 'signDisplay', 'unit', 'unitDisplay', 'roundingMode', 'roundingPriority', 'roundingIncrement', 'trailingZeroDisplay'];\n/** @internal */\nfunction parseNumberArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  const options = create();\n  let overrides = create();\n  if (!isNumber(arg1)) {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  const value = arg1;\n  if (isString(arg2)) {\n    options.key = arg2;\n  } else if (isPlainObject(arg2)) {\n    Object.keys(arg2).forEach(key => {\n      if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\n        overrides[key] = arg2[key];\n      } else {\n        options[key] = arg2[key];\n      }\n    });\n  }\n  if (isString(arg3)) {\n    options.locale = arg3;\n  } else if (isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n  if (isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearNumberFormat(ctx, locale, format) {\n  const context = ctx;\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n    if (!context.__numberFormatters.has(id)) {\n      continue;\n    }\n    context.__numberFormatters.delete(id);\n  }\n}\nconst DEFAULT_MODIFIER = str => str;\nconst DEFAULT_MESSAGE = ctx => ''; // eslint-disable-line\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\nconst DEFAULT_NORMALIZE = values => values.length === 0 ? '' : join(values);\nconst DEFAULT_INTERPOLATE = toDisplayString;\nfunction pluralDefault(choice, choicesLength) {\n  choice = Math.abs(choice);\n  if (choicesLength === 2) {\n    // prettier-ignore\n    return choice ? choice > 1 ? 1 : 0 : 1;\n  }\n  return choice ? Math.min(choice, 2) : 0;\n}\nfunction getPluralIndex(options) {\n  // prettier-ignore\n  const index = isNumber(options.pluralIndex) ? options.pluralIndex : -1;\n  // prettier-ignore\n  return options.named && (isNumber(options.named.count) || isNumber(options.named.n)) ? isNumber(options.named.count) ? options.named.count : isNumber(options.named.n) ? options.named.n : index : index;\n}\nfunction normalizeNamed(pluralIndex, props) {\n  if (!props.count) {\n    props.count = pluralIndex;\n  }\n  if (!props.n) {\n    props.n = pluralIndex;\n  }\n}\nfunction createMessageContext(options = {}) {\n  const locale = options.locale;\n  const pluralIndex = getPluralIndex(options);\n  const pluralRule = isObject(options.pluralRules) && isString(locale) && isFunction(options.pluralRules[locale]) ? options.pluralRules[locale] : pluralDefault;\n  const orgPluralRule = isObject(options.pluralRules) && isString(locale) && isFunction(options.pluralRules[locale]) ? pluralDefault : undefined;\n  const plural = messages => {\n    return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n  };\n  const _list = options.list || [];\n  const list = index => _list[index];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const _named = options.named || create();\n  isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n  const named = key => _named[key];\n  function message(key, useLinked) {\n    // prettier-ignore\n    const msg = isFunction(options.messages) ? options.messages(key, !!useLinked) : isObject(options.messages) ? options.messages[key] : false;\n    return !msg ? options.parent ? options.parent.message(key) // resolve from parent messages\n    : DEFAULT_MESSAGE : msg;\n  }\n  const _modifier = name => options.modifiers ? options.modifiers[name] : DEFAULT_MODIFIER;\n  const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize) ? options.processor.normalize : DEFAULT_NORMALIZE;\n  const interpolate = isPlainObject(options.processor) && isFunction(options.processor.interpolate) ? options.processor.interpolate : DEFAULT_INTERPOLATE;\n  const type = isPlainObject(options.processor) && isString(options.processor.type) ? options.processor.type : DEFAULT_MESSAGE_DATA_TYPE;\n  const linked = (key, ...args) => {\n    const [arg1, arg2] = args;\n    let type = 'text';\n    let modifier = '';\n    if (args.length === 1) {\n      if (isObject(arg1)) {\n        modifier = arg1.modifier || modifier;\n        type = arg1.type || type;\n      } else if (isString(arg1)) {\n        modifier = arg1 || modifier;\n      }\n    } else if (args.length === 2) {\n      if (isString(arg1)) {\n        modifier = arg1 || modifier;\n      }\n      if (isString(arg2)) {\n        type = arg2 || type;\n      }\n    }\n    const ret = message(key, true)(ctx);\n    const msg =\n    // The message in vnode resolved with linked are returned as an array by processor.nomalize\n    type === 'vnode' && isArray(ret) && modifier ? ret[0] : ret;\n    return modifier ? _modifier(modifier)(msg, type) : msg;\n  };\n  const ctx = {\n    [\"list\" /* HelperNameMap.LIST */]: list,\n    [\"named\" /* HelperNameMap.NAMED */]: named,\n    [\"plural\" /* HelperNameMap.PLURAL */]: plural,\n    [\"linked\" /* HelperNameMap.LINKED */]: linked,\n    [\"message\" /* HelperNameMap.MESSAGE */]: message,\n    [\"type\" /* HelperNameMap.TYPE */]: type,\n    [\"interpolate\" /* HelperNameMap.INTERPOLATE */]: interpolate,\n    [\"normalize\" /* HelperNameMap.NORMALIZE */]: normalize,\n    [\"values\" /* HelperNameMap.VALUES */]: assign(create(), _list, _named)\n  };\n  return ctx;\n}\nconst NOOP_MESSAGE_FUNCTION = () => '';\nconst isMessageFunction = val => isFunction(val);\n// implementation of `translate` function\nfunction translate(context, ...args) {\n  const {\n    fallbackFormat,\n    postTranslation,\n    unresolving,\n    messageCompiler,\n    fallbackLocale,\n    messages\n  } = context;\n  const [key, options] = parseTranslateArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const escapeParameter = isBoolean(options.escapeParameter) ? options.escapeParameter : context.escapeParameter;\n  const resolvedMessage = !!options.resolvedMessage;\n  // prettier-ignore\n  const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n  ? !isBoolean(options.default) ? options.default : !messageCompiler ? () => key : key : fallbackFormat // default by `fallbackFormat` option\n  ? !messageCompiler ? () => key : key : null;\n  const enableDefaultMsg = fallbackFormat || defaultMsgOrKey != null && (isString(defaultMsgOrKey) || isFunction(defaultMsgOrKey));\n  const locale = getLocale(context, options);\n  // escape params\n  escapeParameter && escapeParams(options);\n  // resolve message format\n  // eslint-disable-next-line prefer-const\n  let [formatScope, targetLocale, message] = !resolvedMessage ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) : [key, locale, messages[locale] || create()];\n  // NOTE:\n  //  Fix to work around `ssrTransfrom` bug in Vite.\n  //  https://github.com/vitejs/vite/issues/4306\n  //  To get around this, use temporary variables.\n  //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n  let format = formatScope;\n  // if you use default message, set it as message format!\n  let cacheBaseKey = key;\n  if (!resolvedMessage && !(isString(format) || isMessageAST(format) || isMessageFunction(format))) {\n    if (enableDefaultMsg) {\n      format = defaultMsgOrKey;\n      cacheBaseKey = format;\n    }\n  }\n  // checking message format and target locale\n  if (!resolvedMessage && (!(isString(format) || isMessageAST(format) || isMessageFunction(format)) || !isString(targetLocale))) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  // TODO: refactor\n  if (process.env.NODE_ENV !== 'production' && isString(format) && context.messageCompiler == null) {\n    warn(`The message format compilation is not supported in this build. ` + `Because message compiler isn't included. ` + `You need to pre-compilation all message format. ` + `So translate function return '${key}'.`);\n    return key;\n  }\n  // setup compile error detecting\n  let occurred = false;\n  const onError = () => {\n    occurred = true;\n  };\n  // compile message format\n  const msg = !isMessageFunction(format) ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) : format;\n  // if occurred compile error, return the message format\n  if (occurred) {\n    return format;\n  }\n  // evaluate message with context\n  const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n  const msgContext = createMessageContext(ctxOptions);\n  const messaged = evaluateMessage(context, msg, msgContext);\n  // if use post translation option, proceed it with handler\n  const ret = postTranslation ? postTranslation(messaged, key) : messaged;\n  // NOTE: experimental !!\n  if (process.env.NODE_ENV !== 'production' || __INTLIFY_PROD_DEVTOOLS__) {\n    // prettier-ignore\n    const payloads = {\n      timestamp: Date.now(),\n      key: isString(key) ? key : isMessageFunction(format) ? format.key : '',\n      locale: targetLocale || (isMessageFunction(format) ? format.locale : ''),\n      format: isString(format) ? format : isMessageFunction(format) ? format.source : '',\n      message: ret\n    };\n    payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n    translateDevTools(payloads);\n  }\n  return ret;\n}\nfunction escapeParams(options) {\n  if (isArray(options.list)) {\n    options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n  } else if (isObject(options.named)) {\n    Object.keys(options.named).forEach(key => {\n      if (isString(options.named[key])) {\n        options.named[key] = escapeHtml(options.named[key]);\n      }\n    });\n  }\n}\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n  const {\n    messages,\n    onWarn,\n    messageResolver: resolveValue,\n    localeFallbacker\n  } = context;\n  const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n  let message = create();\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'translate';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && !isAlmostSameLocale(locale, targetLocale) && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\n        key,\n        target: targetLocale\n      }));\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n      if (emitter) {\n        emitter.emit('fallback', {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n    message = messages[targetLocale] || create();\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if (process.env.NODE_ENV !== 'production' && inBrowser) {\n      start = window.performance.now();\n      startTag = 'intlify-message-resolve-start';\n      endTag = 'intlify-message-resolve-end';\n      mark && mark(startTag);\n    }\n    if ((format = resolveValue(message, key)) === null) {\n      // if null, resolve with object key path\n      format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && inBrowser) {\n      const end = window.performance.now();\n      const emitter = context.__v_emitter;\n      if (emitter && start && format) {\n        emitter.emit('message-resolve', {\n          type: 'message-resolve',\n          key,\n          message: format,\n          time: end - start,\n          groupId: `${type}:${key}`\n        });\n      }\n      if (startTag && endTag && mark && measure) {\n        mark(endTag);\n        measure('intlify message resolve', startTag, endTag);\n      }\n    }\n    if (isString(format) || isMessageAST(format) || isMessageFunction(format)) {\n      break;\n    }\n    if (!isImplicitFallback(targetLocale, locales)) {\n      const missingRet = handleMissing(context,\n      // eslint-disable-line @typescript-eslint/no-explicit-any\n      key, targetLocale, missingWarn, type);\n      if (missingRet !== key) {\n        format = missingRet;\n      }\n    }\n    from = to;\n  }\n  return [format, targetLocale, message];\n}\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) {\n  const {\n    messageCompiler,\n    warnHtmlMessage\n  } = context;\n  if (isMessageFunction(format)) {\n    const msg = format;\n    msg.locale = msg.locale || targetLocale;\n    msg.key = msg.key || key;\n    return msg;\n  }\n  if (messageCompiler == null) {\n    const msg = () => format;\n    msg.locale = targetLocale;\n    msg.key = key;\n    return msg;\n  }\n  // for vue-devtools timeline event\n  let start = null;\n  let startTag;\n  let endTag;\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    start = window.performance.now();\n    startTag = 'intlify-message-compilation-start';\n    endTag = 'intlify-message-compilation-end';\n    mark && mark(startTag);\n  }\n  const msg = messageCompiler(format, getCompileContext(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, onError));\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    const end = window.performance.now();\n    const emitter = context.__v_emitter;\n    if (emitter && start) {\n      emitter.emit('message-compilation', {\n        type: 'message-compilation',\n        message: format,\n        time: end - start,\n        groupId: `${'translate'}:${key}`\n      });\n    }\n    if (startTag && endTag && mark && measure) {\n      mark(endTag);\n      measure('intlify message compilation', startTag, endTag);\n    }\n  }\n  msg.locale = targetLocale;\n  msg.key = key;\n  msg.source = format;\n  return msg;\n}\nfunction evaluateMessage(context, msg, msgCtx) {\n  // for vue-devtools timeline event\n  let start = null;\n  let startTag;\n  let endTag;\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    start = window.performance.now();\n    startTag = 'intlify-message-evaluation-start';\n    endTag = 'intlify-message-evaluation-end';\n    mark && mark(startTag);\n  }\n  const messaged = msg(msgCtx);\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    const end = window.performance.now();\n    const emitter = context.__v_emitter;\n    if (emitter && start) {\n      emitter.emit('message-evaluation', {\n        type: 'message-evaluation',\n        value: messaged,\n        time: end - start,\n        groupId: `${'translate'}:${msg.key}`\n      });\n    }\n    if (startTag && endTag && mark && measure) {\n      mark(endTag);\n      measure('intlify message evaluation', startTag, endTag);\n    }\n  }\n  return messaged;\n}\n/** @internal */\nfunction parseTranslateArgs(...args) {\n  const [arg1, arg2, arg3] = args;\n  const options = create();\n  if (!isString(arg1) && !isNumber(arg1) && !isMessageFunction(arg1) && !isMessageAST(arg1)) {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  // prettier-ignore\n  const key = isNumber(arg1) ? String(arg1) : isMessageFunction(arg1) ? arg1 : arg1;\n  if (isNumber(arg2)) {\n    options.plural = arg2;\n  } else if (isString(arg2)) {\n    options.default = arg2;\n  } else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n    options.named = arg2;\n  } else if (isArray(arg2)) {\n    options.list = arg2;\n  }\n  if (isNumber(arg3)) {\n    options.plural = arg3;\n  } else if (isString(arg3)) {\n    options.default = arg3;\n  } else if (isPlainObject(arg3)) {\n    assign(options, arg3);\n  }\n  return [key, options];\n}\nfunction getCompileContext(context, locale, key, source, warnHtmlMessage, onError) {\n  return {\n    locale,\n    key,\n    warnHtmlMessage,\n    onError: err => {\n      onError && onError(err);\n      if (process.env.NODE_ENV !== 'production') {\n        const _source = getSourceForCodeFrame(source);\n        const message = `Message compilation error: ${err.message}`;\n        const codeFrame = err.location && _source && generateCodeFrame(_source, err.location.start.offset, err.location.end.offset);\n        const emitter = context.__v_emitter;\n        if (emitter && _source) {\n          emitter.emit('compile-error', {\n            message: _source,\n            error: err.message,\n            start: err.location && err.location.start.offset,\n            end: err.location && err.location.end.offset,\n            groupId: `${'translate'}:${key}`\n          });\n        }\n        console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n      } else {\n        throw err;\n      }\n    },\n    onCacheKey: source => generateFormatCacheKey(locale, key, source)\n  };\n}\nfunction getSourceForCodeFrame(source) {\n  if (isString(source)) {\n    return source;\n  } else {\n    if (source.loc && source.loc.source) {\n      return source.loc.source;\n    }\n  }\n}\nfunction getMessageContextOptions(context, locale, message, options) {\n  const {\n    modifiers,\n    pluralRules,\n    messageResolver: resolveValue,\n    fallbackLocale,\n    fallbackWarn,\n    missingWarn,\n    fallbackContext\n  } = context;\n  const resolveMessage = (key, useLinked) => {\n    let val = resolveValue(message, key);\n    // fallback\n    if (val == null && (fallbackContext || useLinked)) {\n      const [,, message] = resolveMessageFormat(fallbackContext || context,\n      // NOTE: if has fallbackContext, fallback to root, else if use linked, fallback to local context\n      key, locale, fallbackLocale, fallbackWarn, missingWarn);\n      val = resolveValue(message, key);\n    }\n    if (isString(val) || isMessageAST(val)) {\n      let occurred = false;\n      const onError = () => {\n        occurred = true;\n      };\n      const msg = compileMessageFormat(context, key, locale, val, key, onError);\n      return !occurred ? msg : NOOP_MESSAGE_FUNCTION;\n    } else if (isMessageFunction(val)) {\n      return val;\n    } else {\n      // TODO: should be implemented warning message\n      return NOOP_MESSAGE_FUNCTION;\n    }\n  };\n  const ctxOptions = {\n    locale,\n    modifiers,\n    pluralRules,\n    messages: resolveMessage\n  };\n  if (context.processor) {\n    ctxOptions.processor = context.processor;\n  }\n  if (options.list) {\n    ctxOptions.list = options.list;\n  }\n  if (options.named) {\n    ctxOptions.named = options.named;\n  }\n  if (isNumber(options.plural)) {\n    ctxOptions.pluralIndex = options.plural;\n  }\n  return ctxOptions;\n}\n{\n  initFeatureFlags();\n}\nexport { CORE_ERROR_CODES_EXTEND_POINT, CORE_WARN_CODES_EXTEND_POINT, CoreErrorCodes, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compile, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getLocale, getWarnMessage, handleMissing, initI18nDevTools, isAlmostSameLocale, isImplicitFallback, isMessageAST, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveLocale, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };","map":{"version":3,"names":["getGlobalThis","hasOwn","isNumber","create","isObject","isString","isBoolean","warn","format","format$1","isFunction","isPromise","isArray","isPlainObject","assign","isRegExp","warnOnce","isEmptyObject","isDate","join","toDisplayString","escapeHtml","inBrowser","mark","measure","generateCodeFrame","generateFormatCacheKey","detectHtmlTag","defaultOnError","baseCompile","baseCompile$1","COMPILE_ERROR_CODES_EXTEND_POINT","createCompileError","CompileErrorCodes","initFeatureFlags","__INTLIFY_PROD_DEVTOOLS__","__INTLIFY_DROP_MESSAGE_COMPILER__","ast","msg","ctx","formatParts","body","resolveBody","createUnhandleNodeError","type","resolveType","plural","cases","resolveCases","reduce","messages","c","formatMessageParts","PROPS_BODY","node","resolveProps","PROPS_CASES","static_","resolveStatic","normalize","resolveItems","acm","formatMessagePart","PROPS_STATIC","PROPS_ITEMS","resolveValue$1","named","k","interpolate","key","list","i","index","linked","modifier","resolveLinkedModifier","resolveLinkedKey","undefined","Error","PROPS_TYPE","PROPS_VALUE","resolved","PROPS_MODIFIER","PROPS_KEY","props","defaultValue","length","prop","WARN_MESSAGE","checkHtmlMessage","source","warnHtmlMessage","defaultOnCacheKey","message","compileCache","clearCompileCache","isMessageAST","val","options","detectError","onError","err","compile","context","process","env","NODE_ENV","onCacheKey","cacheKey","cached","location","jit","devtools","setDevToolsHook","hook","getDevToolsHook","initI18nDevTools","i18n","version","meta","emit","timestamp","Date","now","translateDevTools","createDevToolsHook","payloads","CoreErrorCodes","INVALID_ARGUMENT","INVALID_DATE_ARGUMENT","INVALID_ISO_DATE_ARGUMENT","NOT_SUPPORT_NON_STRING_MESSAGE","NOT_SUPPORT_LOCALE_PROMISE_VALUE","NOT_SUPPORT_LOCALE_ASYNC_FUNCTION","NOT_SUPPORT_LOCALE_TYPE","CORE_ERROR_CODES_EXTEND_POINT","createCoreError","code","errorMessages","getLocale","locale","resolveLocale","_resolveLocale","resolvedOnce","constructor","name","resolve","fallbackWithSimple","fallback","start","Set","Object","keys","fallbackWithLocaleChain","startLocale","DEFAULT_LOCALE","__localeChainCache","Map","chain","get","block","appendBlockToChain","defaults","set","blocks","follow","appendLocaleToChain","tokens","split","target","appendItemToChain","splice","includes","replace","push","pathStateMachine","literalValueRE","isLiteral","exp","test","stripQuotes","str","a","charCodeAt","b","slice","getPathCharType","ch","formatSubPath","path","trimmed","trim","charAt","isNaN","parseInt","parse","mode","subPathDepth","newChar","transition","action","typeMap","actions","maybeUnescapeQuote","nextChar","cache","resolveWithKeyValue","obj","resolveValue","hit","len","last","CoreWarnCodes","NOT_FOUND_KEY","FALLBACK_TO_TRANSLATE","CANNOT_FORMAT_NUMBER","FALLBACK_TO_NUMBER_FORMAT","CANNOT_FORMAT_DATE","FALLBACK_TO_DATE_FORMAT","EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER","CORE_WARN_CODES_EXTEND_POINT","warnMessages","getWarnMessage","args","VERSION","NOT_REOSLVED","MISSING_RESOLVE_VALUE","capitalize","toLocaleUpperCase","substr","getDefaultLinkedModifiers","upper","toUpperCase","children","lower","toLowerCase","_compiler","registerMessageCompiler","compiler","_resolver","registerMessageResolver","resolver","_fallbacker","registerLocaleFallbacker","fallbacker","_additionalMeta","setAdditionalMeta","getAdditionalMeta","_fallbackContext","setFallbackContext","getFallbackContext","_cid","createCoreContext","onWarn","_locale","fallbackLocale","createResources","datetimeFormats","numberFormats","modifiers","pluralRules","missing","missingWarn","fallbackWarn","fallbackFormat","unresolving","postTranslation","processor","escapeParameter","messageCompiler","messageResolver","localeFallbacker","fallbackContext","internalOptions","__datetimeFormatters","__numberFormatters","__meta","cid","__v_emitter","isTranslateFallbackWarn","RegExp","isTranslateMissingWarn","handleMissing","emitter","groupId","ret","updateFallbackLocale","isAlmostSameLocale","compareLocale","isImplicitFallback","targetLocale","locales","indexOf","intlDefined","Intl","Availabilities","dateTimeFormat","DateTimeFormat","numberFormat","NumberFormat","datetime","value","overrides","parseDateTimeArgs","part","datetimeFormat","from","to","id","JSON","stringify","formatter","formatToParts","DATETIME_FORMAT_OPTIONS_KEYS","arg1","arg2","arg3","arg4","matches","match","dateTime","startsWith","toISOString","getTime","forEach","clearDateTimeFormat","has","delete","number","parseNumberArgs","NUMBER_FORMAT_OPTIONS_KEYS","clearNumberFormat","DEFAULT_MODIFIER","DEFAULT_MESSAGE","DEFAULT_MESSAGE_DATA_TYPE","DEFAULT_NORMALIZE","values","DEFAULT_INTERPOLATE","pluralDefault","choice","choicesLength","Math","abs","min","getPluralIndex","pluralIndex","count","n","normalizeNamed","createMessageContext","pluralRule","orgPluralRule","_list","_named","useLinked","parent","_modifier","NOOP_MESSAGE_FUNCTION","isMessageFunction","translate","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","default","enableDefaultMsg","escapeParams","formatScope","resolveMessageFormat","cacheBaseKey","occurred","compileMessageFormat","ctxOptions","getMessageContextOptions","msgContext","messaged","evaluateMessage","map","item","startTag","endTag","window","performance","end","time","missingRet","getCompileContext","msgCtx","String","_source","getSourceForCodeFrame","codeFrame","offset","error","console","loc","resolveMessage"],"sources":["C:/Users/User/orchestra-landing/node_modules/@intlify/core-base/dist/core-base.mjs"],"sourcesContent":["/*!\r\n  * core-base v11.1.2\r\n  * (c) 2025 kazuya kawaguchi\r\n  * Released under the MIT License.\r\n  */\r\nimport { getGlobalThis, hasOwn, isNumber, create, isObject, isString, isBoolean, warn, format as format$1, isFunction, isPromise, isArray, isPlainObject, assign, isRegExp, warnOnce, isEmptyObject, isDate, join, toDisplayString, escapeHtml, inBrowser, mark, measure, generateCodeFrame, generateFormatCacheKey } from '@intlify/shared';\r\nimport { detectHtmlTag, defaultOnError, baseCompile as baseCompile$1, COMPILE_ERROR_CODES_EXTEND_POINT, createCompileError } from '@intlify/message-compiler';\r\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\r\n\r\n/**\r\n * This is only called in esm-bundler builds.\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\r\n        getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ !== 'boolean') {\r\n        getGlobalThis().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;\r\n    }\r\n}\r\n\r\nfunction format(ast) {\r\n    const msg = (ctx) => formatParts(ctx, ast);\r\n    return msg;\r\n}\r\nfunction formatParts(ctx, ast) {\r\n    const body = resolveBody(ast);\r\n    if (body == null) {\r\n        throw createUnhandleNodeError(0 /* NodeTypes.Resource */);\r\n    }\r\n    const type = resolveType(body);\r\n    if (type === 1 /* NodeTypes.Plural */) {\r\n        const plural = body;\r\n        const cases = resolveCases(plural);\r\n        return ctx.plural(cases.reduce((messages, c) => [\r\n            ...messages,\r\n            formatMessageParts(ctx, c)\r\n        ], []));\r\n    }\r\n    else {\r\n        return formatMessageParts(ctx, body);\r\n    }\r\n}\r\nconst PROPS_BODY = ['b', 'body'];\r\nfunction resolveBody(node) {\r\n    return resolveProps(node, PROPS_BODY);\r\n}\r\nconst PROPS_CASES = ['c', 'cases'];\r\nfunction resolveCases(node) {\r\n    return resolveProps(node, PROPS_CASES, []);\r\n}\r\nfunction formatMessageParts(ctx, node) {\r\n    const static_ = resolveStatic(node);\r\n    if (static_ != null) {\r\n        return ctx.type === 'text'\r\n            ? static_\r\n            : ctx.normalize([static_]);\r\n    }\r\n    else {\r\n        const messages = resolveItems(node).reduce((acm, c) => [...acm, formatMessagePart(ctx, c)], []);\r\n        return ctx.normalize(messages);\r\n    }\r\n}\r\nconst PROPS_STATIC = ['s', 'static'];\r\nfunction resolveStatic(node) {\r\n    return resolveProps(node, PROPS_STATIC);\r\n}\r\nconst PROPS_ITEMS = ['i', 'items'];\r\nfunction resolveItems(node) {\r\n    return resolveProps(node, PROPS_ITEMS, []);\r\n}\r\nfunction formatMessagePart(ctx, node) {\r\n    const type = resolveType(node);\r\n    switch (type) {\r\n        case 3 /* NodeTypes.Text */: {\r\n            return resolveValue$1(node, type);\r\n        }\r\n        case 9 /* NodeTypes.Literal */: {\r\n            return resolveValue$1(node, type);\r\n        }\r\n        case 4 /* NodeTypes.Named */: {\r\n            const named = node;\r\n            if (hasOwn(named, 'k') && named.k) {\r\n                return ctx.interpolate(ctx.named(named.k));\r\n            }\r\n            if (hasOwn(named, 'key') && named.key) {\r\n                return ctx.interpolate(ctx.named(named.key));\r\n            }\r\n            throw createUnhandleNodeError(type);\r\n        }\r\n        case 5 /* NodeTypes.List */: {\r\n            const list = node;\r\n            if (hasOwn(list, 'i') && isNumber(list.i)) {\r\n                return ctx.interpolate(ctx.list(list.i));\r\n            }\r\n            if (hasOwn(list, 'index') && isNumber(list.index)) {\r\n                return ctx.interpolate(ctx.list(list.index));\r\n            }\r\n            throw createUnhandleNodeError(type);\r\n        }\r\n        case 6 /* NodeTypes.Linked */: {\r\n            const linked = node;\r\n            const modifier = resolveLinkedModifier(linked);\r\n            const key = resolveLinkedKey(linked);\r\n            return ctx.linked(formatMessagePart(ctx, key), modifier ? formatMessagePart(ctx, modifier) : undefined, ctx.type);\r\n        }\r\n        case 7 /* NodeTypes.LinkedKey */: {\r\n            return resolveValue$1(node, type);\r\n        }\r\n        case 8 /* NodeTypes.LinkedModifier */: {\r\n            return resolveValue$1(node, type);\r\n        }\r\n        default:\r\n            throw new Error(`unhandled node on format message part: ${type}`);\r\n    }\r\n}\r\nconst PROPS_TYPE = ['t', 'type'];\r\nfunction resolveType(node) {\r\n    return resolveProps(node, PROPS_TYPE);\r\n}\r\nconst PROPS_VALUE = ['v', 'value'];\r\nfunction resolveValue$1(node, type) {\r\n    const resolved = resolveProps(node, PROPS_VALUE);\r\n    if (resolved) {\r\n        return resolved;\r\n    }\r\n    else {\r\n        throw createUnhandleNodeError(type);\r\n    }\r\n}\r\nconst PROPS_MODIFIER = ['m', 'modifier'];\r\nfunction resolveLinkedModifier(node) {\r\n    return resolveProps(node, PROPS_MODIFIER);\r\n}\r\nconst PROPS_KEY = ['k', 'key'];\r\nfunction resolveLinkedKey(node) {\r\n    const resolved = resolveProps(node, PROPS_KEY);\r\n    if (resolved) {\r\n        return resolved;\r\n    }\r\n    else {\r\n        throw createUnhandleNodeError(6 /* NodeTypes.Linked */);\r\n    }\r\n}\r\nfunction resolveProps(node, props, defaultValue) {\r\n    for (let i = 0; i < props.length; i++) {\r\n        const prop = props[i];\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        if (hasOwn(node, prop) && node[prop] != null) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return node[prop];\r\n        }\r\n    }\r\n    return defaultValue;\r\n}\r\nfunction createUnhandleNodeError(type) {\r\n    return new Error(`unhandled node type: ${type}`);\r\n}\r\n\r\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\r\nfunction checkHtmlMessage(source, warnHtmlMessage) {\r\n    if (warnHtmlMessage && detectHtmlTag(source)) {\r\n        warn(format$1(WARN_MESSAGE, { source }));\r\n    }\r\n}\r\nconst defaultOnCacheKey = (message) => message;\r\nlet compileCache = create();\r\nfunction clearCompileCache() {\r\n    compileCache = create();\r\n}\r\nfunction isMessageAST(val) {\r\n    return (isObject(val) &&\r\n        resolveType(val) === 0 &&\r\n        (hasOwn(val, 'b') || hasOwn(val, 'body')));\r\n}\r\nfunction baseCompile(message, options = {}) {\r\n    // error detecting on compile\r\n    let detectError = false;\r\n    const onError = options.onError || defaultOnError;\r\n    options.onError = (err) => {\r\n        detectError = true;\r\n        onError(err);\r\n    };\r\n    // compile with mesasge-compiler\r\n    return { ...baseCompile$1(message, options), detectError };\r\n}\r\n/* #__NO_SIDE_EFFECTS__ */\r\nfunction compile(message, context) {\r\n    if ((!__INTLIFY_DROP_MESSAGE_COMPILER__) &&\r\n        isString(message)) {\r\n        // check HTML message\r\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\r\n            ? context.warnHtmlMessage\r\n            : true;\r\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\r\n        // check caches\r\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\r\n        const cacheKey = onCacheKey(message);\r\n        const cached = compileCache[cacheKey];\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        // compile with JIT mode\r\n        const { ast, detectError } = baseCompile(message, {\r\n            ...context,\r\n            location: (process.env.NODE_ENV !== 'production'),\r\n            jit: true\r\n        });\r\n        // compose message function from AST\r\n        const msg = format(ast);\r\n        // if occurred compile error, don't cache\r\n        return !detectError\r\n            ? (compileCache[cacheKey] = msg)\r\n            : msg;\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !isMessageAST(message)) {\r\n            warn(`the message that is resolve with key '${context.key}' is not supported for jit compilation`);\r\n            return (() => message);\r\n        }\r\n        // AST case (passed from bundler)\r\n        const cacheKey = message.cacheKey;\r\n        if (cacheKey) {\r\n            const cached = compileCache[cacheKey];\r\n            if (cached) {\r\n                return cached;\r\n            }\r\n            // compose message function from message (AST)\r\n            return (compileCache[cacheKey] =\r\n                format(message));\r\n        }\r\n        else {\r\n            return format(message);\r\n        }\r\n    }\r\n}\r\n\r\nlet devtools = null;\r\nfunction setDevToolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction getDevToolsHook() {\r\n    return devtools;\r\n}\r\nfunction initI18nDevTools(i18n, version, meta) {\r\n    // TODO: queue if devtools is undefined\r\n    devtools &&\r\n        devtools.emit('i18n:init', {\r\n            timestamp: Date.now(),\r\n            i18n,\r\n            version,\r\n            meta\r\n        });\r\n}\r\nconst translateDevTools = \r\n/* #__PURE__*/ createDevToolsHook('function:translate');\r\nfunction createDevToolsHook(hook) {\r\n    return (payloads) => devtools && devtools.emit(hook, payloads);\r\n}\r\n\r\nconst CoreErrorCodes = {\r\n    INVALID_ARGUMENT: COMPILE_ERROR_CODES_EXTEND_POINT, // 17\r\n    INVALID_DATE_ARGUMENT: 18,\r\n    INVALID_ISO_DATE_ARGUMENT: 19,\r\n    NOT_SUPPORT_NON_STRING_MESSAGE: 20,\r\n    NOT_SUPPORT_LOCALE_PROMISE_VALUE: 21,\r\n    NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: 22,\r\n    NOT_SUPPORT_LOCALE_TYPE: 23\r\n};\r\nconst CORE_ERROR_CODES_EXTEND_POINT = 24;\r\nfunction createCoreError(code) {\r\n    return createCompileError(code, null, (process.env.NODE_ENV !== 'production') ? { messages: errorMessages } : undefined);\r\n}\r\n/** @internal */\r\nconst errorMessages = {\r\n    [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\r\n    [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' +\r\n        'Make sure your Date represents a valid date.',\r\n    [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string',\r\n    [CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE]: 'Not support non-string message',\r\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE]: 'cannot support promise value',\r\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION]: 'cannot support async function',\r\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE]: 'cannot support locale type'\r\n};\r\n\r\n/** @internal */\r\nfunction getLocale(context, options) {\r\n    return options.locale != null\r\n        ? resolveLocale(options.locale)\r\n        : resolveLocale(context.locale);\r\n}\r\nlet _resolveLocale;\r\n/** @internal */\r\nfunction resolveLocale(locale) {\r\n    if (isString(locale)) {\r\n        return locale;\r\n    }\r\n    else {\r\n        if (isFunction(locale)) {\r\n            if (locale.resolvedOnce && _resolveLocale != null) {\r\n                return _resolveLocale;\r\n            }\r\n            else if (locale.constructor.name === 'Function') {\r\n                const resolve = locale();\r\n                if (isPromise(resolve)) {\r\n                    throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);\r\n                }\r\n                return (_resolveLocale = resolve);\r\n            }\r\n            else {\r\n                throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);\r\n            }\r\n        }\r\n        else {\r\n            throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Fallback with simple implemenation\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a simple fallback algorithm.\r\n *\r\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction fallbackWithSimple(ctx, fallback, start) {\r\n    // prettier-ignore\r\n    return [...new Set([\r\n            start,\r\n            ...(isArray(fallback)\r\n                ? fallback\r\n                : isObject(fallback)\r\n                    ? Object.keys(fallback)\r\n                    : isString(fallback)\r\n                        ? [fallback]\r\n                        : [start])\r\n        ])];\r\n}\r\n/**\r\n * Fallback with locale chain\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\r\n    const startLocale = isString(start) ? start : DEFAULT_LOCALE;\r\n    const context = ctx;\r\n    if (!context.__localeChainCache) {\r\n        context.__localeChainCache = new Map();\r\n    }\r\n    let chain = context.__localeChainCache.get(startLocale);\r\n    if (!chain) {\r\n        chain = [];\r\n        // first block defined by start\r\n        let block = [start];\r\n        // while any intervening block found\r\n        while (isArray(block)) {\r\n            block = appendBlockToChain(chain, block, fallback);\r\n        }\r\n        // prettier-ignore\r\n        // last block defined by default\r\n        const defaults = isArray(fallback) || !isPlainObject(fallback)\r\n            ? fallback\r\n            : fallback['default']\r\n                ? fallback['default']\r\n                : null;\r\n        // convert defaults to array\r\n        block = isString(defaults) ? [defaults] : defaults;\r\n        if (isArray(block)) {\r\n            appendBlockToChain(chain, block, false);\r\n        }\r\n        context.__localeChainCache.set(startLocale, chain);\r\n    }\r\n    return chain;\r\n}\r\nfunction appendBlockToChain(chain, block, blocks) {\r\n    let follow = true;\r\n    for (let i = 0; i < block.length && isBoolean(follow); i++) {\r\n        const locale = block[i];\r\n        if (isString(locale)) {\r\n            follow = appendLocaleToChain(chain, block[i], blocks);\r\n        }\r\n    }\r\n    return follow;\r\n}\r\nfunction appendLocaleToChain(chain, locale, blocks) {\r\n    let follow;\r\n    const tokens = locale.split('-');\r\n    do {\r\n        const target = tokens.join('-');\r\n        follow = appendItemToChain(chain, target, blocks);\r\n        tokens.splice(-1, 1);\r\n    } while (tokens.length && follow === true);\r\n    return follow;\r\n}\r\nfunction appendItemToChain(chain, target, blocks) {\r\n    let follow = false;\r\n    if (!chain.includes(target)) {\r\n        follow = true;\r\n        if (target) {\r\n            follow = target[target.length - 1] !== '!';\r\n            const locale = target.replace(/!/g, '');\r\n            chain.push(locale);\r\n            if ((isArray(blocks) || isPlainObject(blocks)) &&\r\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\r\n            ) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                follow = blocks[locale];\r\n            }\r\n        }\r\n    }\r\n    return follow;\r\n}\r\n\r\nconst pathStateMachine = [];\r\npathStateMachine[0 /* States.BEFORE_PATH */] = {\r\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [0 /* States.BEFORE_PATH */],\r\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\r\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\r\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\r\n};\r\npathStateMachine[1 /* States.IN_PATH */] = {\r\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */],\r\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */],\r\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\r\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\r\n};\r\npathStateMachine[2 /* States.BEFORE_IDENT */] = {\r\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [2 /* States.BEFORE_IDENT */],\r\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\r\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */]\r\n};\r\npathStateMachine[3 /* States.IN_IDENT */] = {\r\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\r\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\r\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */, 1 /* Actions.PUSH */],\r\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */, 1 /* Actions.PUSH */],\r\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 1 /* Actions.PUSH */],\r\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */, 1 /* Actions.PUSH */]\r\n};\r\npathStateMachine[4 /* States.IN_SUB_PATH */] = {\r\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */],\r\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */],\r\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [\r\n        4 /* States.IN_SUB_PATH */,\r\n        2 /* Actions.INC_SUB_PATH_DEPTH */\r\n    ],\r\n    [\"]\" /* PathCharTypes.RIGHT_BRACKET */]: [1 /* States.IN_PATH */, 3 /* Actions.PUSH_SUB_PATH */],\r\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\r\n    [\"l\" /* PathCharTypes.ELSE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */]\r\n};\r\npathStateMachine[5 /* States.IN_SINGLE_QUOTE */] = {\r\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\r\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\r\n    [\"l\" /* PathCharTypes.ELSE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */]\r\n};\r\npathStateMachine[6 /* States.IN_DOUBLE_QUOTE */] = {\r\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\r\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\r\n    [\"l\" /* PathCharTypes.ELSE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */]\r\n};\r\n/**\r\n * Check if an expression is a literal value.\r\n */\r\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\r\nfunction isLiteral(exp) {\r\n    return literalValueRE.test(exp);\r\n}\r\n/**\r\n * Strip quotes from a string\r\n */\r\nfunction stripQuotes(str) {\r\n    const a = str.charCodeAt(0);\r\n    const b = str.charCodeAt(str.length - 1);\r\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\r\n}\r\n/**\r\n * Determine the type of a character in a keypath.\r\n */\r\nfunction getPathCharType(ch) {\r\n    if (ch === undefined || ch === null) {\r\n        return \"o\" /* PathCharTypes.END_OF_FAIL */;\r\n    }\r\n    const code = ch.charCodeAt(0);\r\n    switch (code) {\r\n        case 0x5b: // [\r\n        case 0x5d: // ]\r\n        case 0x2e: // .\r\n        case 0x22: // \"\r\n        case 0x27: // '\r\n            return ch;\r\n        case 0x5f: // _\r\n        case 0x24: // $\r\n        case 0x2d: // -\r\n            return \"i\" /* PathCharTypes.IDENT */;\r\n        case 0x09: // Tab (HT)\r\n        case 0x0a: // Newline (LF)\r\n        case 0x0d: // Return (CR)\r\n        case 0xa0: // No-break space (NBSP)\r\n        case 0xfeff: // Byte Order Mark (BOM)\r\n        case 0x2028: // Line Separator (LS)\r\n        case 0x2029: // Paragraph Separator (PS)\r\n            return \"w\" /* PathCharTypes.WORKSPACE */;\r\n    }\r\n    return \"i\" /* PathCharTypes.IDENT */;\r\n}\r\n/**\r\n * Format a subPath, return its plain form if it is\r\n * a literal string or number. Otherwise prepend the\r\n * dynamic indicator (*).\r\n */\r\nfunction formatSubPath(path) {\r\n    const trimmed = path.trim();\r\n    // invalid leading 0\r\n    if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\r\n        return false;\r\n    }\r\n    return isLiteral(trimmed)\r\n        ? stripQuotes(trimmed)\r\n        : \"*\" /* PathCharTypes.ASTARISK */ + trimmed;\r\n}\r\n/**\r\n * Parse a string path into an array of segments\r\n */\r\nfunction parse(path) {\r\n    const keys = [];\r\n    let index = -1;\r\n    let mode = 0 /* States.BEFORE_PATH */;\r\n    let subPathDepth = 0;\r\n    let c;\r\n    let key; // eslint-disable-line\r\n    let newChar;\r\n    let type;\r\n    let transition;\r\n    let action;\r\n    let typeMap;\r\n    const actions = [];\r\n    actions[0 /* Actions.APPEND */] = () => {\r\n        if (key === undefined) {\r\n            key = newChar;\r\n        }\r\n        else {\r\n            key += newChar;\r\n        }\r\n    };\r\n    actions[1 /* Actions.PUSH */] = () => {\r\n        if (key !== undefined) {\r\n            keys.push(key);\r\n            key = undefined;\r\n        }\r\n    };\r\n    actions[2 /* Actions.INC_SUB_PATH_DEPTH */] = () => {\r\n        actions[0 /* Actions.APPEND */]();\r\n        subPathDepth++;\r\n    };\r\n    actions[3 /* Actions.PUSH_SUB_PATH */] = () => {\r\n        if (subPathDepth > 0) {\r\n            subPathDepth--;\r\n            mode = 4 /* States.IN_SUB_PATH */;\r\n            actions[0 /* Actions.APPEND */]();\r\n        }\r\n        else {\r\n            subPathDepth = 0;\r\n            if (key === undefined) {\r\n                return false;\r\n            }\r\n            key = formatSubPath(key);\r\n            if (key === false) {\r\n                return false;\r\n            }\r\n            else {\r\n                actions[1 /* Actions.PUSH */]();\r\n            }\r\n        }\r\n    };\r\n    function maybeUnescapeQuote() {\r\n        const nextChar = path[index + 1];\r\n        if ((mode === 5 /* States.IN_SINGLE_QUOTE */ &&\r\n            nextChar === \"'\" /* PathCharTypes.SINGLE_QUOTE */) ||\r\n            (mode === 6 /* States.IN_DOUBLE_QUOTE */ &&\r\n                nextChar === \"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */)) {\r\n            index++;\r\n            newChar = '\\\\' + nextChar;\r\n            actions[0 /* Actions.APPEND */]();\r\n            return true;\r\n        }\r\n    }\r\n    while (mode !== null) {\r\n        index++;\r\n        c = path[index];\r\n        if (c === '\\\\' && maybeUnescapeQuote()) {\r\n            continue;\r\n        }\r\n        type = getPathCharType(c);\r\n        typeMap = pathStateMachine[mode];\r\n        transition = typeMap[type] || typeMap[\"l\" /* PathCharTypes.ELSE */] || 8 /* States.ERROR */;\r\n        // check parse error\r\n        if (transition === 8 /* States.ERROR */) {\r\n            return;\r\n        }\r\n        mode = transition[0];\r\n        if (transition[1] !== undefined) {\r\n            action = actions[transition[1]];\r\n            if (action) {\r\n                newChar = c;\r\n                if (action() === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        // check parse finish\r\n        if (mode === 7 /* States.AFTER_PATH */) {\r\n            return keys;\r\n        }\r\n    }\r\n}\r\n// path token cache\r\nconst cache = new Map();\r\n/**\r\n * key-value message resolver\r\n *\r\n * @remarks\r\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction resolveWithKeyValue(obj, path) {\r\n    return isObject(obj) ? obj[path] : null;\r\n}\r\n/**\r\n * message resolver\r\n *\r\n * @remarks\r\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction resolveValue(obj, path) {\r\n    // check object\r\n    if (!isObject(obj)) {\r\n        return null;\r\n    }\r\n    // parse path\r\n    let hit = cache.get(path);\r\n    if (!hit) {\r\n        hit = parse(path);\r\n        if (hit) {\r\n            cache.set(path, hit);\r\n        }\r\n    }\r\n    // check hit\r\n    if (!hit) {\r\n        return null;\r\n    }\r\n    // resolve path value\r\n    const len = hit.length;\r\n    let last = obj;\r\n    let i = 0;\r\n    while (i < len) {\r\n        const val = last[hit[i]];\r\n        if (val === undefined) {\r\n            return null;\r\n        }\r\n        if (isFunction(last)) {\r\n            return null;\r\n        }\r\n        last = val;\r\n        i++;\r\n    }\r\n    return last;\r\n}\r\n\r\nconst CoreWarnCodes = {\r\n    NOT_FOUND_KEY: 1,\r\n    FALLBACK_TO_TRANSLATE: 2,\r\n    CANNOT_FORMAT_NUMBER: 3,\r\n    FALLBACK_TO_NUMBER_FORMAT: 4,\r\n    CANNOT_FORMAT_DATE: 5,\r\n    FALLBACK_TO_DATE_FORMAT: 6,\r\n    EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: 7\r\n};\r\nconst CORE_WARN_CODES_EXTEND_POINT = 8;\r\n/** @internal */\r\nconst warnMessages = {\r\n    [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\r\n    [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\r\n    [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\r\n    [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\r\n    [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\r\n    [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`,\r\n    [CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER]: `This project is using Custom Message Compiler, which is an experimental feature. It may receive breaking changes or be removed in the future.`\r\n};\r\nfunction getWarnMessage(code, ...args) {\r\n    return format$1(warnMessages[code], ...args);\r\n}\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Intlify core-base version\r\n * @internal\r\n */\r\nconst VERSION = '11.1.2';\r\nconst NOT_REOSLVED = -1;\r\nconst DEFAULT_LOCALE = 'en-US';\r\nconst MISSING_RESOLVE_VALUE = '';\r\nconst capitalize = (str) => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\r\nfunction getDefaultLinkedModifiers() {\r\n    return {\r\n        upper: (val, type) => {\r\n            // prettier-ignore\r\n            return type === 'text' && isString(val)\r\n                ? val.toUpperCase()\r\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\r\n                    ? val.children.toUpperCase()\r\n                    : val;\r\n        },\r\n        lower: (val, type) => {\r\n            // prettier-ignore\r\n            return type === 'text' && isString(val)\r\n                ? val.toLowerCase()\r\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\r\n                    ? val.children.toLowerCase()\r\n                    : val;\r\n        },\r\n        capitalize: (val, type) => {\r\n            // prettier-ignore\r\n            return (type === 'text' && isString(val)\r\n                ? capitalize(val)\r\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\r\n                    ? capitalize(val.children)\r\n                    : val);\r\n        }\r\n    };\r\n}\r\nlet _compiler;\r\nfunction registerMessageCompiler(compiler) {\r\n    _compiler = compiler;\r\n}\r\nlet _resolver;\r\n/**\r\n * Register the message resolver\r\n *\r\n * @param resolver - A {@link MessageResolver} function\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction registerMessageResolver(resolver) {\r\n    _resolver = resolver;\r\n}\r\nlet _fallbacker;\r\n/**\r\n * Register the locale fallbacker\r\n *\r\n * @param fallbacker - A {@link LocaleFallbacker} function\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction registerLocaleFallbacker(fallbacker) {\r\n    _fallbacker = fallbacker;\r\n}\r\n// Additional Meta for Intlify DevTools\r\nlet _additionalMeta = null;\r\n/* #__NO_SIDE_EFFECTS__ */\r\nconst setAdditionalMeta = (meta) => {\r\n    _additionalMeta = meta;\r\n};\r\n/* #__NO_SIDE_EFFECTS__ */\r\nconst getAdditionalMeta = () => _additionalMeta;\r\nlet _fallbackContext = null;\r\nconst setFallbackContext = (context) => {\r\n    _fallbackContext = context;\r\n};\r\nconst getFallbackContext = () => _fallbackContext;\r\n// ID for CoreContext\r\nlet _cid = 0;\r\nfunction createCoreContext(options = {}) {\r\n    // setup options\r\n    const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\r\n    const version = isString(options.version) ? options.version : VERSION;\r\n    const locale = isString(options.locale) || isFunction(options.locale)\r\n        ? options.locale\r\n        : DEFAULT_LOCALE;\r\n    const _locale = isFunction(locale) ? DEFAULT_LOCALE : locale;\r\n    const fallbackLocale = isArray(options.fallbackLocale) ||\r\n        isPlainObject(options.fallbackLocale) ||\r\n        isString(options.fallbackLocale) ||\r\n        options.fallbackLocale === false\r\n        ? options.fallbackLocale\r\n        : _locale;\r\n    const messages = isPlainObject(options.messages)\r\n        ? options.messages\r\n        : createResources(_locale);\r\n    const datetimeFormats = isPlainObject(options.datetimeFormats)\r\n            ? options.datetimeFormats\r\n            : createResources(_locale)\r\n        ;\r\n    const numberFormats = isPlainObject(options.numberFormats)\r\n            ? options.numberFormats\r\n            : createResources(_locale)\r\n        ;\r\n    const modifiers = assign(create(), options.modifiers, getDefaultLinkedModifiers());\r\n    const pluralRules = options.pluralRules || create();\r\n    const missing = isFunction(options.missing) ? options.missing : null;\r\n    const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn)\r\n        ? options.missingWarn\r\n        : true;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : true;\r\n    const fallbackFormat = !!options.fallbackFormat;\r\n    const unresolving = !!options.unresolving;\r\n    const postTranslation = isFunction(options.postTranslation)\r\n        ? options.postTranslation\r\n        : null;\r\n    const processor = isPlainObject(options.processor) ? options.processor : null;\r\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\r\n        ? options.warnHtmlMessage\r\n        : true;\r\n    const escapeParameter = !!options.escapeParameter;\r\n    const messageCompiler = isFunction(options.messageCompiler)\r\n        ? options.messageCompiler\r\n        : _compiler;\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        !false &&\r\n        !false &&\r\n        isFunction(options.messageCompiler)) {\r\n        warnOnce(getWarnMessage(CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER));\r\n    }\r\n    const messageResolver = isFunction(options.messageResolver)\r\n        ? options.messageResolver\r\n        : _resolver || resolveWithKeyValue;\r\n    const localeFallbacker = isFunction(options.localeFallbacker)\r\n        ? options.localeFallbacker\r\n        : _fallbacker || fallbackWithSimple;\r\n    const fallbackContext = isObject(options.fallbackContext)\r\n        ? options.fallbackContext\r\n        : undefined;\r\n    // setup internal options\r\n    const internalOptions = options;\r\n    const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters)\r\n            ? internalOptions.__datetimeFormatters\r\n            : new Map()\r\n        ;\r\n    const __numberFormatters = isObject(internalOptions.__numberFormatters)\r\n            ? internalOptions.__numberFormatters\r\n            : new Map()\r\n        ;\r\n    const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\r\n    _cid++;\r\n    const context = {\r\n        version,\r\n        cid: _cid,\r\n        locale,\r\n        fallbackLocale,\r\n        messages,\r\n        modifiers,\r\n        pluralRules,\r\n        missing,\r\n        missingWarn,\r\n        fallbackWarn,\r\n        fallbackFormat,\r\n        unresolving,\r\n        postTranslation,\r\n        processor,\r\n        warnHtmlMessage,\r\n        escapeParameter,\r\n        messageCompiler,\r\n        messageResolver,\r\n        localeFallbacker,\r\n        fallbackContext,\r\n        onWarn,\r\n        __meta\r\n    };\r\n    {\r\n        context.datetimeFormats = datetimeFormats;\r\n        context.numberFormats = numberFormats;\r\n        context.__datetimeFormatters = __datetimeFormatters;\r\n        context.__numberFormatters = __numberFormatters;\r\n    }\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        context.__v_emitter =\r\n            internalOptions.__v_emitter != null\r\n                ? internalOptions.__v_emitter\r\n                : undefined;\r\n    }\r\n    // NOTE: experimental !!\r\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\r\n        initI18nDevTools(context, version, __meta);\r\n    }\r\n    return context;\r\n}\r\nconst createResources = (locale) => ({ [locale]: create() });\r\n/** @internal */\r\nfunction isTranslateFallbackWarn(fallback, key) {\r\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\r\n}\r\n/** @internal */\r\nfunction isTranslateMissingWarn(missing, key) {\r\n    return missing instanceof RegExp ? missing.test(key) : missing;\r\n}\r\n/** @internal */\r\nfunction handleMissing(context, key, locale, missingWarn, type) {\r\n    const { missing, onWarn } = context;\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const emitter = context.__v_emitter;\r\n        if (emitter) {\r\n            emitter.emit('missing', {\r\n                locale,\r\n                key,\r\n                type,\r\n                groupId: `${type}:${key}`\r\n            });\r\n        }\r\n    }\r\n    if (missing !== null) {\r\n        const ret = missing(context, locale, key, type);\r\n        return isString(ret) ? ret : key;\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && isTranslateMissingWarn(missingWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, { key, locale }));\r\n        }\r\n        return key;\r\n    }\r\n}\r\n/** @internal */\r\nfunction updateFallbackLocale(ctx, locale, fallback) {\r\n    const context = ctx;\r\n    context.__localeChainCache = new Map();\r\n    ctx.localeFallbacker(ctx, fallback, locale);\r\n}\r\n/** @internal */\r\nfunction isAlmostSameLocale(locale, compareLocale) {\r\n    if (locale === compareLocale)\r\n        return false;\r\n    return locale.split('-')[0] === compareLocale.split('-')[0];\r\n}\r\n/** @internal */\r\nfunction isImplicitFallback(targetLocale, locales) {\r\n    const index = locales.indexOf(targetLocale);\r\n    if (index === -1) {\r\n        return false;\r\n    }\r\n    for (let i = index + 1; i < locales.length; i++) {\r\n        if (isAlmostSameLocale(targetLocale, locales[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/* eslint-enable @typescript-eslint/no-explicit-any */\r\n\r\nconst intlDefined = typeof Intl !== 'undefined';\r\nconst Availabilities = {\r\n    dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\r\n    numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\r\n};\r\n\r\n// implementation of `datetime` function\r\nfunction datetime(context, ...args) {\r\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\r\n    const { __datetimeFormatters } = context;\r\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.dateTimeFormat) {\r\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\r\n        return MISSING_RESOLVE_VALUE;\r\n    }\r\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const part = !!options.part;\r\n    const locale = getLocale(context, options);\r\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    fallbackLocale, locale);\r\n    if (!isString(key) || key === '') {\r\n        return new Intl.DateTimeFormat(locale, overrides).format(value);\r\n    }\r\n    // resolve format\r\n    let datetimeFormat = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'datetime format';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit('fallback', {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        datetimeFormat =\r\n            datetimeFormats[targetLocale] || {};\r\n        format = datetimeFormat[key];\r\n        if (isPlainObject(format))\r\n            break;\r\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        from = to;\r\n    }\r\n    // checking format and target locale\r\n    if (!isPlainObject(format) || !isString(targetLocale)) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    let id = `${targetLocale}__${key}`;\r\n    if (!isEmptyObject(overrides)) {\r\n        id = `${id}__${JSON.stringify(overrides)}`;\r\n    }\r\n    let formatter = __datetimeFormatters.get(id);\r\n    if (!formatter) {\r\n        formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\r\n        __datetimeFormatters.set(id, formatter);\r\n    }\r\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\r\n}\r\n/** @internal */\r\nconst DATETIME_FORMAT_OPTIONS_KEYS = [\r\n    'localeMatcher',\r\n    'weekday',\r\n    'era',\r\n    'year',\r\n    'month',\r\n    'day',\r\n    'hour',\r\n    'minute',\r\n    'second',\r\n    'timeZoneName',\r\n    'formatMatcher',\r\n    'hour12',\r\n    'timeZone',\r\n    'dateStyle',\r\n    'timeStyle',\r\n    'calendar',\r\n    'dayPeriod',\r\n    'numberingSystem',\r\n    'hourCycle',\r\n    'fractionalSecondDigits'\r\n];\r\n/** @internal */\r\nfunction parseDateTimeArgs(...args) {\r\n    const [arg1, arg2, arg3, arg4] = args;\r\n    const options = create();\r\n    let overrides = create();\r\n    let value;\r\n    if (isString(arg1)) {\r\n        // Only allow ISO strings - other date formats are often supported,\r\n        // but may cause different results in different browsers.\r\n        const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\r\n        if (!matches) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\r\n        }\r\n        // Some browsers can not parse the iso datetime separated by space,\r\n        // this is a compromise solution by replace the 'T'/' ' with 'T'\r\n        const dateTime = matches[3]\r\n            ? matches[3].trim().startsWith('T')\r\n                ? `${matches[1].trim()}${matches[3].trim()}`\r\n                : `${matches[1].trim()}T${matches[3].trim()}`\r\n            : matches[1].trim();\r\n        value = new Date(dateTime);\r\n        try {\r\n            // This will fail if the date is not valid\r\n            value.toISOString();\r\n        }\r\n        catch {\r\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\r\n        }\r\n    }\r\n    else if (isDate(arg1)) {\r\n        if (isNaN(arg1.getTime())) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\r\n        }\r\n        value = arg1;\r\n    }\r\n    else if (isNumber(arg1)) {\r\n        value = arg1;\r\n    }\r\n    else {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    if (isString(arg2)) {\r\n        options.key = arg2;\r\n    }\r\n    else if (isPlainObject(arg2)) {\r\n        Object.keys(arg2).forEach(key => {\r\n            if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\r\n                overrides[key] = arg2[key];\r\n            }\r\n            else {\r\n                options[key] = arg2[key];\r\n            }\r\n        });\r\n    }\r\n    if (isString(arg3)) {\r\n        options.locale = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        overrides = arg3;\r\n    }\r\n    if (isPlainObject(arg4)) {\r\n        overrides = arg4;\r\n    }\r\n    return [options.key || '', value, options, overrides];\r\n}\r\n/** @internal */\r\nfunction clearDateTimeFormat(ctx, locale, format) {\r\n    const context = ctx;\r\n    for (const key in format) {\r\n        const id = `${locale}__${key}`;\r\n        if (!context.__datetimeFormatters.has(id)) {\r\n            continue;\r\n        }\r\n        context.__datetimeFormatters.delete(id);\r\n    }\r\n}\r\n\r\n// implementation of `number` function\r\nfunction number(context, ...args) {\r\n    const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\r\n    const { __numberFormatters } = context;\r\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.numberFormat) {\r\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\r\n        return MISSING_RESOLVE_VALUE;\r\n    }\r\n    const [key, value, options, overrides] = parseNumberArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const part = !!options.part;\r\n    const locale = getLocale(context, options);\r\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    fallbackLocale, locale);\r\n    if (!isString(key) || key === '') {\r\n        return new Intl.NumberFormat(locale, overrides).format(value);\r\n    }\r\n    // resolve format\r\n    let numberFormat = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'number format';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit('fallback', {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        numberFormat =\r\n            numberFormats[targetLocale] || {};\r\n        format = numberFormat[key];\r\n        if (isPlainObject(format))\r\n            break;\r\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        from = to;\r\n    }\r\n    // checking format and target locale\r\n    if (!isPlainObject(format) || !isString(targetLocale)) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    let id = `${targetLocale}__${key}`;\r\n    if (!isEmptyObject(overrides)) {\r\n        id = `${id}__${JSON.stringify(overrides)}`;\r\n    }\r\n    let formatter = __numberFormatters.get(id);\r\n    if (!formatter) {\r\n        formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\r\n        __numberFormatters.set(id, formatter);\r\n    }\r\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\r\n}\r\n/** @internal */\r\nconst NUMBER_FORMAT_OPTIONS_KEYS = [\r\n    'localeMatcher',\r\n    'style',\r\n    'currency',\r\n    'currencyDisplay',\r\n    'currencySign',\r\n    'useGrouping',\r\n    'minimumIntegerDigits',\r\n    'minimumFractionDigits',\r\n    'maximumFractionDigits',\r\n    'minimumSignificantDigits',\r\n    'maximumSignificantDigits',\r\n    'compactDisplay',\r\n    'notation',\r\n    'signDisplay',\r\n    'unit',\r\n    'unitDisplay',\r\n    'roundingMode',\r\n    'roundingPriority',\r\n    'roundingIncrement',\r\n    'trailingZeroDisplay'\r\n];\r\n/** @internal */\r\nfunction parseNumberArgs(...args) {\r\n    const [arg1, arg2, arg3, arg4] = args;\r\n    const options = create();\r\n    let overrides = create();\r\n    if (!isNumber(arg1)) {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    const value = arg1;\r\n    if (isString(arg2)) {\r\n        options.key = arg2;\r\n    }\r\n    else if (isPlainObject(arg2)) {\r\n        Object.keys(arg2).forEach(key => {\r\n            if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\r\n                overrides[key] = arg2[key];\r\n            }\r\n            else {\r\n                options[key] = arg2[key];\r\n            }\r\n        });\r\n    }\r\n    if (isString(arg3)) {\r\n        options.locale = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        overrides = arg3;\r\n    }\r\n    if (isPlainObject(arg4)) {\r\n        overrides = arg4;\r\n    }\r\n    return [options.key || '', value, options, overrides];\r\n}\r\n/** @internal */\r\nfunction clearNumberFormat(ctx, locale, format) {\r\n    const context = ctx;\r\n    for (const key in format) {\r\n        const id = `${locale}__${key}`;\r\n        if (!context.__numberFormatters.has(id)) {\r\n            continue;\r\n        }\r\n        context.__numberFormatters.delete(id);\r\n    }\r\n}\r\n\r\nconst DEFAULT_MODIFIER = (str) => str;\r\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\r\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\r\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : join(values);\r\nconst DEFAULT_INTERPOLATE = toDisplayString;\r\nfunction pluralDefault(choice, choicesLength) {\r\n    choice = Math.abs(choice);\r\n    if (choicesLength === 2) {\r\n        // prettier-ignore\r\n        return choice\r\n            ? choice > 1\r\n                ? 1\r\n                : 0\r\n            : 1;\r\n    }\r\n    return choice ? Math.min(choice, 2) : 0;\r\n}\r\nfunction getPluralIndex(options) {\r\n    // prettier-ignore\r\n    const index = isNumber(options.pluralIndex)\r\n        ? options.pluralIndex\r\n        : -1;\r\n    // prettier-ignore\r\n    return options.named && (isNumber(options.named.count) || isNumber(options.named.n))\r\n        ? isNumber(options.named.count)\r\n            ? options.named.count\r\n            : isNumber(options.named.n)\r\n                ? options.named.n\r\n                : index\r\n        : index;\r\n}\r\nfunction normalizeNamed(pluralIndex, props) {\r\n    if (!props.count) {\r\n        props.count = pluralIndex;\r\n    }\r\n    if (!props.n) {\r\n        props.n = pluralIndex;\r\n    }\r\n}\r\nfunction createMessageContext(options = {}) {\r\n    const locale = options.locale;\r\n    const pluralIndex = getPluralIndex(options);\r\n    const pluralRule = isObject(options.pluralRules) &&\r\n        isString(locale) &&\r\n        isFunction(options.pluralRules[locale])\r\n        ? options.pluralRules[locale]\r\n        : pluralDefault;\r\n    const orgPluralRule = isObject(options.pluralRules) &&\r\n        isString(locale) &&\r\n        isFunction(options.pluralRules[locale])\r\n        ? pluralDefault\r\n        : undefined;\r\n    const plural = (messages) => {\r\n        return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\r\n    };\r\n    const _list = options.list || [];\r\n    const list = (index) => _list[index];\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const _named = options.named || create();\r\n    isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\r\n    const named = (key) => _named[key];\r\n    function message(key, useLinked) {\r\n        // prettier-ignore\r\n        const msg = isFunction(options.messages)\r\n            ? options.messages(key, !!useLinked)\r\n            : isObject(options.messages)\r\n                ? options.messages[key]\r\n                : false;\r\n        return !msg\r\n            ? options.parent\r\n                ? options.parent.message(key) // resolve from parent messages\r\n                : DEFAULT_MESSAGE\r\n            : msg;\r\n    }\r\n    const _modifier = (name) => options.modifiers\r\n        ? options.modifiers[name]\r\n        : DEFAULT_MODIFIER;\r\n    const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize)\r\n        ? options.processor.normalize\r\n        : DEFAULT_NORMALIZE;\r\n    const interpolate = isPlainObject(options.processor) &&\r\n        isFunction(options.processor.interpolate)\r\n        ? options.processor.interpolate\r\n        : DEFAULT_INTERPOLATE;\r\n    const type = isPlainObject(options.processor) && isString(options.processor.type)\r\n        ? options.processor.type\r\n        : DEFAULT_MESSAGE_DATA_TYPE;\r\n    const linked = (key, ...args) => {\r\n        const [arg1, arg2] = args;\r\n        let type = 'text';\r\n        let modifier = '';\r\n        if (args.length === 1) {\r\n            if (isObject(arg1)) {\r\n                modifier = arg1.modifier || modifier;\r\n                type = arg1.type || type;\r\n            }\r\n            else if (isString(arg1)) {\r\n                modifier = arg1 || modifier;\r\n            }\r\n        }\r\n        else if (args.length === 2) {\r\n            if (isString(arg1)) {\r\n                modifier = arg1 || modifier;\r\n            }\r\n            if (isString(arg2)) {\r\n                type = arg2 || type;\r\n            }\r\n        }\r\n        const ret = message(key, true)(ctx);\r\n        const msg = \r\n        // The message in vnode resolved with linked are returned as an array by processor.nomalize\r\n        type === 'vnode' && isArray(ret) && modifier\r\n            ? ret[0]\r\n            : ret;\r\n        return modifier ? _modifier(modifier)(msg, type) : msg;\r\n    };\r\n    const ctx = {\r\n        [\"list\" /* HelperNameMap.LIST */]: list,\r\n        [\"named\" /* HelperNameMap.NAMED */]: named,\r\n        [\"plural\" /* HelperNameMap.PLURAL */]: plural,\r\n        [\"linked\" /* HelperNameMap.LINKED */]: linked,\r\n        [\"message\" /* HelperNameMap.MESSAGE */]: message,\r\n        [\"type\" /* HelperNameMap.TYPE */]: type,\r\n        [\"interpolate\" /* HelperNameMap.INTERPOLATE */]: interpolate,\r\n        [\"normalize\" /* HelperNameMap.NORMALIZE */]: normalize,\r\n        [\"values\" /* HelperNameMap.VALUES */]: assign(create(), _list, _named)\r\n    };\r\n    return ctx;\r\n}\r\n\r\nconst NOOP_MESSAGE_FUNCTION = () => '';\r\nconst isMessageFunction = (val) => isFunction(val);\r\n// implementation of `translate` function\r\nfunction translate(context, ...args) {\r\n    const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;\r\n    const [key, options] = parseTranslateArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const escapeParameter = isBoolean(options.escapeParameter)\r\n        ? options.escapeParameter\r\n        : context.escapeParameter;\r\n    const resolvedMessage = !!options.resolvedMessage;\r\n    // prettier-ignore\r\n    const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\r\n        ? !isBoolean(options.default)\r\n            ? options.default\r\n            : (!messageCompiler ? () => key : key)\r\n        : fallbackFormat // default by `fallbackFormat` option\r\n            ? (!messageCompiler ? () => key : key)\r\n            : null;\r\n    const enableDefaultMsg = fallbackFormat ||\r\n        (defaultMsgOrKey != null &&\r\n            (isString(defaultMsgOrKey) || isFunction(defaultMsgOrKey)));\r\n    const locale = getLocale(context, options);\r\n    // escape params\r\n    escapeParameter && escapeParams(options);\r\n    // resolve message format\r\n    // eslint-disable-next-line prefer-const\r\n    let [formatScope, targetLocale, message] = !resolvedMessage\r\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\r\n        : [\r\n            key,\r\n            locale,\r\n            messages[locale] || create()\r\n        ];\r\n    // NOTE:\r\n    //  Fix to work around `ssrTransfrom` bug in Vite.\r\n    //  https://github.com/vitejs/vite/issues/4306\r\n    //  To get around this, use temporary variables.\r\n    //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\r\n    let format = formatScope;\r\n    // if you use default message, set it as message format!\r\n    let cacheBaseKey = key;\r\n    if (!resolvedMessage &&\r\n        !(isString(format) ||\r\n            isMessageAST(format) ||\r\n            isMessageFunction(format))) {\r\n        if (enableDefaultMsg) {\r\n            format = defaultMsgOrKey;\r\n            cacheBaseKey = format;\r\n        }\r\n    }\r\n    // checking message format and target locale\r\n    if (!resolvedMessage &&\r\n        (!(isString(format) ||\r\n            isMessageAST(format) ||\r\n            isMessageFunction(format)) ||\r\n            !isString(targetLocale))) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    // TODO: refactor\r\n    if ((process.env.NODE_ENV !== 'production') && isString(format) && context.messageCompiler == null) {\r\n        warn(`The message format compilation is not supported in this build. ` +\r\n            `Because message compiler isn't included. ` +\r\n            `You need to pre-compilation all message format. ` +\r\n            `So translate function return '${key}'.`);\r\n        return key;\r\n    }\r\n    // setup compile error detecting\r\n    let occurred = false;\r\n    const onError = () => {\r\n        occurred = true;\r\n    };\r\n    // compile message format\r\n    const msg = !isMessageFunction(format)\r\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError)\r\n        : format;\r\n    // if occurred compile error, return the message format\r\n    if (occurred) {\r\n        return format;\r\n    }\r\n    // evaluate message with context\r\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\r\n    const msgContext = createMessageContext(ctxOptions);\r\n    const messaged = evaluateMessage(context, msg, msgContext);\r\n    // if use post translation option, proceed it with handler\r\n    const ret = postTranslation\r\n        ? postTranslation(messaged, key)\r\n        : messaged;\r\n    // NOTE: experimental !!\r\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\r\n        // prettier-ignore\r\n        const payloads = {\r\n            timestamp: Date.now(),\r\n            key: isString(key)\r\n                ? key\r\n                : isMessageFunction(format)\r\n                    ? format.key\r\n                    : '',\r\n            locale: targetLocale || (isMessageFunction(format)\r\n                ? format.locale\r\n                : ''),\r\n            format: isString(format)\r\n                ? format\r\n                : isMessageFunction(format)\r\n                    ? format.source\r\n                    : '',\r\n            message: ret\r\n        };\r\n        payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\r\n        translateDevTools(payloads);\r\n    }\r\n    return ret;\r\n}\r\nfunction escapeParams(options) {\r\n    if (isArray(options.list)) {\r\n        options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\r\n    }\r\n    else if (isObject(options.named)) {\r\n        Object.keys(options.named).forEach(key => {\r\n            if (isString(options.named[key])) {\r\n                options.named[key] = escapeHtml(options.named[key]);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\r\n    const { messages, onWarn, messageResolver: resolveValue, localeFallbacker } = context;\r\n    const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    let message = create();\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'translate';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            !isAlmostSameLocale(locale, targetLocale) &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit('fallback', {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        message =\r\n            messages[targetLocale] || create();\r\n        // for vue-devtools timeline event\r\n        let start = null;\r\n        let startTag;\r\n        let endTag;\r\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n            start = window.performance.now();\r\n            startTag = 'intlify-message-resolve-start';\r\n            endTag = 'intlify-message-resolve-end';\r\n            mark && mark(startTag);\r\n        }\r\n        if ((format = resolveValue(message, key)) === null) {\r\n            // if null, resolve with object key path\r\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n            const end = window.performance.now();\r\n            const emitter = context.__v_emitter;\r\n            if (emitter && start && format) {\r\n                emitter.emit('message-resolve', {\r\n                    type: 'message-resolve',\r\n                    key,\r\n                    message: format,\r\n                    time: end - start,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n            if (startTag && endTag && mark && measure) {\r\n                mark(endTag);\r\n                measure('intlify message resolve', startTag, endTag);\r\n            }\r\n        }\r\n        if (isString(format) || isMessageAST(format) || isMessageFunction(format)) {\r\n            break;\r\n        }\r\n        if (!isImplicitFallback(targetLocale, locales)) {\r\n            const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n            key, targetLocale, missingWarn, type);\r\n            if (missingRet !== key) {\r\n                format = missingRet;\r\n            }\r\n        }\r\n        from = to;\r\n    }\r\n    return [format, targetLocale, message];\r\n}\r\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) {\r\n    const { messageCompiler, warnHtmlMessage } = context;\r\n    if (isMessageFunction(format)) {\r\n        const msg = format;\r\n        msg.locale = msg.locale || targetLocale;\r\n        msg.key = msg.key || key;\r\n        return msg;\r\n    }\r\n    if (messageCompiler == null) {\r\n        const msg = (() => format);\r\n        msg.locale = targetLocale;\r\n        msg.key = key;\r\n        return msg;\r\n    }\r\n    // for vue-devtools timeline event\r\n    let start = null;\r\n    let startTag;\r\n    let endTag;\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        start = window.performance.now();\r\n        startTag = 'intlify-message-compilation-start';\r\n        endTag = 'intlify-message-compilation-end';\r\n        mark && mark(startTag);\r\n    }\r\n    const msg = messageCompiler(format, getCompileContext(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, onError));\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        const end = window.performance.now();\r\n        const emitter = context.__v_emitter;\r\n        if (emitter && start) {\r\n            emitter.emit('message-compilation', {\r\n                type: 'message-compilation',\r\n                message: format,\r\n                time: end - start,\r\n                groupId: `${'translate'}:${key}`\r\n            });\r\n        }\r\n        if (startTag && endTag && mark && measure) {\r\n            mark(endTag);\r\n            measure('intlify message compilation', startTag, endTag);\r\n        }\r\n    }\r\n    msg.locale = targetLocale;\r\n    msg.key = key;\r\n    msg.source = format;\r\n    return msg;\r\n}\r\nfunction evaluateMessage(context, msg, msgCtx) {\r\n    // for vue-devtools timeline event\r\n    let start = null;\r\n    let startTag;\r\n    let endTag;\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        start = window.performance.now();\r\n        startTag = 'intlify-message-evaluation-start';\r\n        endTag = 'intlify-message-evaluation-end';\r\n        mark && mark(startTag);\r\n    }\r\n    const messaged = msg(msgCtx);\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        const end = window.performance.now();\r\n        const emitter = context.__v_emitter;\r\n        if (emitter && start) {\r\n            emitter.emit('message-evaluation', {\r\n                type: 'message-evaluation',\r\n                value: messaged,\r\n                time: end - start,\r\n                groupId: `${'translate'}:${msg.key}`\r\n            });\r\n        }\r\n        if (startTag && endTag && mark && measure) {\r\n            mark(endTag);\r\n            measure('intlify message evaluation', startTag, endTag);\r\n        }\r\n    }\r\n    return messaged;\r\n}\r\n/** @internal */\r\nfunction parseTranslateArgs(...args) {\r\n    const [arg1, arg2, arg3] = args;\r\n    const options = create();\r\n    if (!isString(arg1) &&\r\n        !isNumber(arg1) &&\r\n        !isMessageFunction(arg1) &&\r\n        !isMessageAST(arg1)) {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    // prettier-ignore\r\n    const key = isNumber(arg1)\r\n        ? String(arg1)\r\n        : isMessageFunction(arg1)\r\n            ? arg1\r\n            : arg1;\r\n    if (isNumber(arg2)) {\r\n        options.plural = arg2;\r\n    }\r\n    else if (isString(arg2)) {\r\n        options.default = arg2;\r\n    }\r\n    else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\r\n        options.named = arg2;\r\n    }\r\n    else if (isArray(arg2)) {\r\n        options.list = arg2;\r\n    }\r\n    if (isNumber(arg3)) {\r\n        options.plural = arg3;\r\n    }\r\n    else if (isString(arg3)) {\r\n        options.default = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        assign(options, arg3);\r\n    }\r\n    return [key, options];\r\n}\r\nfunction getCompileContext(context, locale, key, source, warnHtmlMessage, onError) {\r\n    return {\r\n        locale,\r\n        key,\r\n        warnHtmlMessage,\r\n        onError: (err) => {\r\n            onError && onError(err);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const _source = getSourceForCodeFrame(source);\r\n                const message = `Message compilation error: ${err.message}`;\r\n                const codeFrame = err.location &&\r\n                    _source &&\r\n                    generateCodeFrame(_source, err.location.start.offset, err.location.end.offset);\r\n                const emitter = context.__v_emitter;\r\n                if (emitter && _source) {\r\n                    emitter.emit('compile-error', {\r\n                        message: _source,\r\n                        error: err.message,\r\n                        start: err.location && err.location.start.offset,\r\n                        end: err.location && err.location.end.offset,\r\n                        groupId: `${'translate'}:${key}`\r\n                    });\r\n                }\r\n                console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n            }\r\n            else {\r\n                throw err;\r\n            }\r\n        },\r\n        onCacheKey: (source) => generateFormatCacheKey(locale, key, source)\r\n    };\r\n}\r\nfunction getSourceForCodeFrame(source) {\r\n    if (isString(source)) {\r\n        return source;\r\n    }\r\n    else {\r\n        if (source.loc && source.loc.source) {\r\n            return source.loc.source;\r\n        }\r\n    }\r\n}\r\nfunction getMessageContextOptions(context, locale, message, options) {\r\n    const { modifiers, pluralRules, messageResolver: resolveValue, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;\r\n    const resolveMessage = (key, useLinked) => {\r\n        let val = resolveValue(message, key);\r\n        // fallback\r\n        if (val == null && (fallbackContext || useLinked)) {\r\n            const [, , message] = resolveMessageFormat(fallbackContext || context, // NOTE: if has fallbackContext, fallback to root, else if use linked, fallback to local context\r\n            key, locale, fallbackLocale, fallbackWarn, missingWarn);\r\n            val = resolveValue(message, key);\r\n        }\r\n        if (isString(val) || isMessageAST(val)) {\r\n            let occurred = false;\r\n            const onError = () => {\r\n                occurred = true;\r\n            };\r\n            const msg = compileMessageFormat(context, key, locale, val, key, onError);\r\n            return !occurred\r\n                ? msg\r\n                : NOOP_MESSAGE_FUNCTION;\r\n        }\r\n        else if (isMessageFunction(val)) {\r\n            return val;\r\n        }\r\n        else {\r\n            // TODO: should be implemented warning message\r\n            return NOOP_MESSAGE_FUNCTION;\r\n        }\r\n    };\r\n    const ctxOptions = {\r\n        locale,\r\n        modifiers,\r\n        pluralRules,\r\n        messages: resolveMessage\r\n    };\r\n    if (context.processor) {\r\n        ctxOptions.processor = context.processor;\r\n    }\r\n    if (options.list) {\r\n        ctxOptions.list = options.list;\r\n    }\r\n    if (options.named) {\r\n        ctxOptions.named = options.named;\r\n    }\r\n    if (isNumber(options.plural)) {\r\n        ctxOptions.pluralIndex = options.plural;\r\n    }\r\n    return ctxOptions;\r\n}\r\n\r\n{\r\n    initFeatureFlags();\r\n}\r\n\r\nexport { CORE_ERROR_CODES_EXTEND_POINT, CORE_WARN_CODES_EXTEND_POINT, CoreErrorCodes, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compile, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getLocale, getWarnMessage, handleMissing, initI18nDevTools, isAlmostSameLocale, isImplicitFallback, isMessageAST, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveLocale, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}