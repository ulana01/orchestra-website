{"ast":null,"code":"export default {\n  data() {\n    return {\n      songs: [{\n        title: \"Rock Around the Clock\",\n        author: \"Bill Haley\",\n        src: \"/mp3/Rock_around.mp3\",\n        duration: 133\n      }, {\n        title: \"Sarzhailau\",\n        author: \"Nurgisa Tilendiyev\",\n        src: \"/mp3/Sarzhailau.mp3\",\n        duration: 201\n      }, {\n        title: \"Aigyr\",\n        author: \"ARO\",\n        src: \"/mp3/Aigyr.mp3\",\n        duration: 214\n      }, {\n        title: \"Feelin' good\",\n        author: \"Anthony Newley\",\n        src: \"/mp3/Feeling_Good.mp3\",\n        duration: 292\n      }, {\n        title: \"Heathens X Stranger Things\",\n        author: \"Twenty One Pilots, Kyle Dixon\",\n        src: \"/mp3/Heathens_Stranger_Things.mp3\",\n        duration: 239\n      }, {\n        title: \"Qosh Bol\",\n        author: \"Moldanazar\",\n        src: \"/mp3/Qosh_bol.mp3\",\n        duration: 190\n      }, {\n        title: \"Tuimedaq\",\n        author: \"Kunzharyq\",\n        src: \"/mp3/Tuimedaq.mp3\",\n        duration: 240\n      }],\n      currentSongIndex: 0,\n      isPlaying: false,\n      progress: 0,\n      currentTime: 0\n    };\n  },\n  computed: {\n    currentSong() {\n      return this.songs[this.currentSongIndex] || {\n        title: \"No Song\",\n        author: \"Unknown\",\n        src: \"\"\n      };\n    }\n  },\n  methods: {\n    playSong(index) {\n      this.currentSongIndex = index;\n      this.playAudio();\n    },\n    playAudio() {\n      this.$nextTick(() => {\n        // Ensures DOM is updated before accessing audio ref\n        const audio = this.$refs.audio;\n        if (!audio) {\n          console.error(\"Audio element is not found.\");\n          return;\n        }\n        audio.src = this.currentSong.src;\n        audio.load(); // Ensure the new source is loaded\n        audio.play().then(() => {\n          this.isPlaying = true;\n        }).catch(err => {\n          console.error(\"Audio playback failed:\", err);\n        });\n      });\n    },\n    togglePlay() {\n      const audio = this.$refs.audio;\n      if (audio) {\n        if (audio.paused) {\n          audio.play();\n          this.isPlaying = true;\n        } else {\n          audio.pause();\n          this.isPlaying = false;\n        }\n      }\n    },\n    prevSong() {\n      this.currentSongIndex = (this.currentSongIndex - 1 + this.songs.length) % this.songs.length;\n      this.playAudio();\n    },\n    nextSong() {\n      this.currentSongIndex = (this.currentSongIndex + 1) % this.songs.length;\n      this.playAudio();\n    },\n    updateTime() {\n      const audio = this.$refs.audio;\n      if (audio) {\n        this.currentTime = audio.currentTime;\n        this.progress = this.currentTime / this.currentSong.duration * 100;\n      }\n    },\n    seekAudio(event) {\n      const audio = this.$refs.audio;\n      if (audio) {\n        const newTime = event.target.value / 100 * this.currentSong.duration;\n        audio.currentTime = newTime;\n        this.currentTime = newTime;\n      }\n    },\n    formatTime(seconds) {\n      if (!seconds) return \"0:00\";\n      const min = Math.floor(seconds / 60);\n      const sec = Math.floor(seconds % 60).toString().padStart(2, \"0\");\n      return `${min}:${sec}`;\n    }\n  }\n};","map":{"version":3,"names":["data","songs","title","author","src","duration","currentSongIndex","isPlaying","progress","currentTime","computed","currentSong","methods","playSong","index","playAudio","$nextTick","audio","$refs","console","error","load","play","then","catch","err","togglePlay","paused","pause","prevSong","length","nextSong","updateTime","seekAudio","event","newTime","target","value","formatTime","seconds","min","Math","floor","sec","toString","padStart"],"sources":["/Users/ulanazhussip/Downloads/orchestra-landing/src/components/TheShow.vue"],"sourcesContent":["<template>\n    <div class=\"music-container\">\n      <div class=\"music-header\">\n        <button @click=\"$router.go(-1)\" class=\"back-button\">←</button>\n        <h1>THE SHOW</h1>\n        <h2>CHOIRCHESTRA</h2>\n      </div>\n  \n      <div class=\"tracklist\">\n        <div v-for=\"(song, index) in songs\" :key=\"index\" class=\"track-item\" @click=\"playSong(index)\">\n          <img src=\"@/assets/theshow.jpeg\" alt=\"Album Art\" class=\"track-image\" />\n          <div class=\"track-info\">\n            <h3>{{ song.title }}</h3>\n            <p>{{ song.author }}</p>\n          </div>\n          <span class=\"track-duration\">{{ formatTime(song.duration) }}</span>\n        </div>\n      </div>\n  \n      <!-- Music Player is always visible but only inside TheShow.vue -->\n      <div class=\"music-player\">\n        <img src=\"@/assets/theshow.jpeg\" alt=\"Cover\" class=\"player-image\" />\n        <div class=\"player-info\">\n          <h3>{{ currentSong.title }}</h3>\n          <p>{{ currentSong.author }}</p>\n        </div>\n        <audio ref=\"audio\" @timeupdate=\"updateTime\" @ended=\"nextSong\">\n          <source :src=\"currentSong.src\" type=\"audio/mp3\" />\n        </audio>\n  \n        <div class=\"player-controls\">\n          <button @click=\"prevSong\">⏮</button>\n          <button @click=\"togglePlay\">{{ isPlaying ? '⏸' : '▶' }}</button>\n          <button @click=\"nextSong\">⏭</button>\n        </div>\n  \n        <input type=\"range\" v-model=\"progress\" @input=\"seekAudio\" />\n        <div class=\"time-info\">\n          <span>{{ formatTime(currentTime) }}</span>\n          <span>{{ formatTime(currentSong.duration) }}</span>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        songs: [\n          { title: \"Rock Around the Clock\", author: \"Bill Haley\", src: \"/mp3/Rock_around.mp3\", duration: 133 },\n          { title: \"Sarzhailau\", author: \"Nurgisa Tilendiyev\", src: \"/mp3/Sarzhailau.mp3\", duration: 201 },\n          { title: \"Aigyr\", author: \"ARO\", src: \"/mp3/Aigyr.mp3\", duration: 214 },\n          { title: \"Feelin' good\", author: \"Anthony Newley\", src: \"/mp3/Feeling_Good.mp3\", duration: 292 },\n          { title: \"Heathens X Stranger Things\", author: \"Twenty One Pilots, Kyle Dixon\", src: \"/mp3/Heathens_Stranger_Things.mp3\", duration: 239 },\n          { title: \"Qosh Bol\", author: \"Moldanazar\", src: \"/mp3/Qosh_bol.mp3\", duration: 190 },\n          { title: \"Tuimedaq\", author: \"Kunzharyq\", src: \"/mp3/Tuimedaq.mp3\", duration: 240 }\n        ],\n        currentSongIndex: 0,\n        isPlaying: false,\n        progress: 0,\n        currentTime: 0\n      };\n    },\n    computed: {\n      currentSong() {\n        return this.songs[this.currentSongIndex] || { title: \"No Song\", author: \"Unknown\", src: \"\" };\n      }\n    },\n    methods: {\n      playSong(index) {\n        this.currentSongIndex = index;\n        this.playAudio();\n      },\n      playAudio() {\n        this.$nextTick(() => { // Ensures DOM is updated before accessing audio ref\n          const audio = this.$refs.audio;\n          if (!audio) {\n            console.error(\"Audio element is not found.\");\n            return;\n          }\n          audio.src = this.currentSong.src;\n          audio.load(); // Ensure the new source is loaded\n          audio.play()\n            .then(() => {\n              this.isPlaying = true;\n            })\n            .catch(err => {\n              console.error(\"Audio playback failed:\", err);\n            });\n        });\n      },\n      togglePlay() {\n        const audio = this.$refs.audio;\n        if (audio) {\n          if (audio.paused) {\n            audio.play();\n            this.isPlaying = true;\n          } else {\n            audio.pause();\n            this.isPlaying = false;\n          }\n        }\n      },\n      prevSong() {\n        this.currentSongIndex = (this.currentSongIndex - 1 + this.songs.length) % this.songs.length;\n        this.playAudio();\n      },\n      nextSong() {\n        this.currentSongIndex = (this.currentSongIndex + 1) % this.songs.length;\n        this.playAudio();\n      },\n      updateTime() {\n        const audio = this.$refs.audio;\n        if (audio) {\n          this.currentTime = audio.currentTime;\n          this.progress = (this.currentTime / this.currentSong.duration) * 100;\n        }\n      },\n      seekAudio(event) {\n        const audio = this.$refs.audio;\n        if (audio) {\n          const newTime = (event.target.value / 100) * this.currentSong.duration;\n          audio.currentTime = newTime;\n          this.currentTime = newTime;\n        }\n      },\n      formatTime(seconds) {\n        if (!seconds) return \"0:00\";\n        const min = Math.floor(seconds / 60);\n        const sec = Math.floor(seconds % 60).toString().padStart(2, \"0\");\n        return `${min}:${sec}`;\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .music-container {\n    background: black;\n    color: white;\n    padding: 20px;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .music-header {\n    text-align: center;\n    margin-bottom: 20px;\n  }\n  \n  .music-header h1 {\n    font-size: 36px;\n  }\n  \n  .music-header h2 {\n    font-size: 20px;\n  }\n  \n  .tracklist {\n    width: 90%;\n    max-width: 600px;\n    overflow-y: auto;\n  }\n  \n  .track-item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px;\n    border-bottom: 1px solid white;\n    cursor: pointer;\n    transition: 0.3s;\n  }\n  \n  .track-item:hover {\n    background: rgba(255, 255, 255, 0.1);\n  }\n  \n  .track-image {\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n  }\n  \n  .track-info {\n    flex: 1;\n    margin-left: 10px;\n  }\n  \n  .track-duration {\n    font-size: 14px;\n    color: gray;\n  }\n  \n  /* Ensures the music player is only in TheShow.vue and remains fixed */\n  .music-player {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    background: black;\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-top: 1px solid white;\n\n  }\n  \n  .player-image {\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n  }\n  \n  .player-info {\n    flex: 1;\n    margin-left: 10px;\n  }\n  \n  .player-controls {\n    display: flex;\n    gap: 10px;\n  }\n  \n  input[type=\"range\"] {\n    width: 100%;\n    margin: 10px 0;\n  }\n  \n  .time-info {\n    display: flex;\n    justify-content: space-between;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}